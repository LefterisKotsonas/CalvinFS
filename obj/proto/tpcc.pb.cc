// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tpcc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tpcc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class NewOrderInputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewOrderInput> {
} _NewOrderInput_default_instance_;

namespace protobuf_tpcc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewOrderInput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewOrderInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewOrderInput, district_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewOrderInput, customer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewOrderInput, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewOrderInput, ol_item_),
  0,
  1,
  2,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 9, sizeof(NewOrderInput)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewOrderInput_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tpcc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _NewOrderInput_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _NewOrderInput_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\ntpcc.proto\"S\n\rNewOrderInput\022\020\n\010distric"
      "t\030\001 \001(\005\022\020\n\010customer\030\002 \001(\005\022\r\n\005order\030\003 \001(\005"
      "\022\017\n\007ol_item\030\004 \003(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 97);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tpcc.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tpcc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewOrderInput::kDistrictFieldNumber;
const int NewOrderInput::kCustomerFieldNumber;
const int NewOrderInput::kOrderFieldNumber;
const int NewOrderInput::kOlItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewOrderInput::NewOrderInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tpcc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NewOrderInput)
}
NewOrderInput::NewOrderInput(const NewOrderInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      ol_item_(from.ol_item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&district_, &from.district_,
    reinterpret_cast<char*>(&order_) -
    reinterpret_cast<char*>(&district_) + sizeof(order_));
  // @@protoc_insertion_point(copy_constructor:NewOrderInput)
}

void NewOrderInput::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&district_, 0, reinterpret_cast<char*>(&order_) -
    reinterpret_cast<char*>(&district_) + sizeof(order_));
}

NewOrderInput::~NewOrderInput() {
  // @@protoc_insertion_point(destructor:NewOrderInput)
  SharedDtor();
}

void NewOrderInput::SharedDtor() {
}

void NewOrderInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewOrderInput::descriptor() {
  protobuf_tpcc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tpcc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewOrderInput& NewOrderInput::default_instance() {
  protobuf_tpcc_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewOrderInput* NewOrderInput::New(::google::protobuf::Arena* arena) const {
  NewOrderInput* n = new NewOrderInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewOrderInput::Clear() {
// @@protoc_insertion_point(message_clear_start:NewOrderInput)
  ol_item_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&district_, 0, reinterpret_cast<char*>(&order_) -
      reinterpret_cast<char*>(&district_) + sizeof(order_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewOrderInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NewOrderInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 district = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_district();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &district_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 customer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_customer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &customer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_order();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 ol_item = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_ol_item())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(34u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_ol_item())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NewOrderInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NewOrderInput)
  return false;
#undef DO_
}

void NewOrderInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NewOrderInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 district = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->district(), output);
  }

  // optional int32 customer = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->customer(), output);
  }

  // optional int32 order = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->order(), output);
  }

  // repeated int32 ol_item = 4;
  for (int i = 0, n = this->ol_item_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->ol_item(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NewOrderInput)
}

::google::protobuf::uint8* NewOrderInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NewOrderInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 district = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->district(), target);
  }

  // optional int32 customer = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->customer(), target);
  }

  // optional int32 order = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->order(), target);
  }

  // repeated int32 ol_item = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->ol_item_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NewOrderInput)
  return target;
}

size_t NewOrderInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NewOrderInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 ol_item = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->ol_item_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ol_item_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 district = 1;
    if (has_district()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->district());
    }

    // optional int32 customer = 2;
    if (has_customer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->customer());
    }

    // optional int32 order = 3;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewOrderInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NewOrderInput)
  GOOGLE_DCHECK_NE(&from, this);
  const NewOrderInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewOrderInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NewOrderInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NewOrderInput)
    MergeFrom(*source);
  }
}

void NewOrderInput::MergeFrom(const NewOrderInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NewOrderInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ol_item_.MergeFrom(from.ol_item_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      district_ = from.district_;
    }
    if (cached_has_bits & 0x00000002u) {
      customer_ = from.customer_;
    }
    if (cached_has_bits & 0x00000004u) {
      order_ = from.order_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NewOrderInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NewOrderInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewOrderInput::CopyFrom(const NewOrderInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NewOrderInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewOrderInput::IsInitialized() const {
  return true;
}

void NewOrderInput::Swap(NewOrderInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewOrderInput::InternalSwap(NewOrderInput* other) {
  ol_item_.InternalSwap(&other->ol_item_);
  std::swap(district_, other->district_);
  std::swap(customer_, other->customer_);
  std::swap(order_, other->order_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewOrderInput::GetMetadata() const {
  protobuf_tpcc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tpcc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewOrderInput

// optional int32 district = 1;
bool NewOrderInput::has_district() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NewOrderInput::set_has_district() {
  _has_bits_[0] |= 0x00000001u;
}
void NewOrderInput::clear_has_district() {
  _has_bits_[0] &= ~0x00000001u;
}
void NewOrderInput::clear_district() {
  district_ = 0;
  clear_has_district();
}
::google::protobuf::int32 NewOrderInput::district() const {
  // @@protoc_insertion_point(field_get:NewOrderInput.district)
  return district_;
}
void NewOrderInput::set_district(::google::protobuf::int32 value) {
  set_has_district();
  district_ = value;
  // @@protoc_insertion_point(field_set:NewOrderInput.district)
}

// optional int32 customer = 2;
bool NewOrderInput::has_customer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NewOrderInput::set_has_customer() {
  _has_bits_[0] |= 0x00000002u;
}
void NewOrderInput::clear_has_customer() {
  _has_bits_[0] &= ~0x00000002u;
}
void NewOrderInput::clear_customer() {
  customer_ = 0;
  clear_has_customer();
}
::google::protobuf::int32 NewOrderInput::customer() const {
  // @@protoc_insertion_point(field_get:NewOrderInput.customer)
  return customer_;
}
void NewOrderInput::set_customer(::google::protobuf::int32 value) {
  set_has_customer();
  customer_ = value;
  // @@protoc_insertion_point(field_set:NewOrderInput.customer)
}

// optional int32 order = 3;
bool NewOrderInput::has_order() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NewOrderInput::set_has_order() {
  _has_bits_[0] |= 0x00000004u;
}
void NewOrderInput::clear_has_order() {
  _has_bits_[0] &= ~0x00000004u;
}
void NewOrderInput::clear_order() {
  order_ = 0;
  clear_has_order();
}
::google::protobuf::int32 NewOrderInput::order() const {
  // @@protoc_insertion_point(field_get:NewOrderInput.order)
  return order_;
}
void NewOrderInput::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:NewOrderInput.order)
}

// repeated int32 ol_item = 4;
int NewOrderInput::ol_item_size() const {
  return ol_item_.size();
}
void NewOrderInput::clear_ol_item() {
  ol_item_.Clear();
}
::google::protobuf::int32 NewOrderInput::ol_item(int index) const {
  // @@protoc_insertion_point(field_get:NewOrderInput.ol_item)
  return ol_item_.Get(index);
}
void NewOrderInput::set_ol_item(int index, ::google::protobuf::int32 value) {
  ol_item_.Set(index, value);
  // @@protoc_insertion_point(field_set:NewOrderInput.ol_item)
}
void NewOrderInput::add_ol_item(::google::protobuf::int32 value) {
  ol_item_.Add(value);
  // @@protoc_insertion_point(field_add:NewOrderInput.ol_item)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NewOrderInput::ol_item() const {
  // @@protoc_insertion_point(field_list:NewOrderInput.ol_item)
  return ol_item_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NewOrderInput::mutable_ol_item() {
  // @@protoc_insertion_point(field_mutable_list:NewOrderInput.ol_item)
  return &ol_item_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
