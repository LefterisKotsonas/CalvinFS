// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "action.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ActionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Action> {
} _Action_default_instance_;
class ActionBatchDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActionBatch> {
} _ActionBatch_default_instance_;

namespace protobuf_action_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, client_machine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, client_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, store_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, action_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, read_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, readset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, writeset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, version_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, involved_machines_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, misc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, action_status_),
  4,
  0,
  1,
  5,
  6,
  2,
  3,
  ~0u,
  ~0u,
  8,
  9,
  10,
  ~0u,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionBatch, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionBatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionBatch, entries_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 19, sizeof(Action)},
  { 33, 39, sizeof(ActionBatch)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Action_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActionBatch_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "action.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _Action_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ActionBatch_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_scalar_2eproto::InitDefaults();
  _Action_default_instance_.DefaultConstruct();
  _ActionBatch_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014action.proto\032\014scalar.proto\"\324\002\n\006Action\022"
      "\026\n\016client_machine\030\001 \001(\004\022\026\n\016client_channe"
      "l\030\002 \001(\t\022\r\n\005store\030\013 \001(\t\022\023\n\013action_type\030\014 "
      "\002(\005\022\030\n\tread_only\030\r \001(\010:\005false\022\r\n\005input\030\016"
      " \002(\014\022\016\n\006output\030\017 \001(\014\022\017\n\007readset\030\025 \003(\014\022\020\n"
      "\010writeset\030\026 \003(\014\022\017\n\007version\030\037 \001(\004\022\026\n\016vers"
      "ion_offset\030  \001(\004\022\034\n\021involved_machines\030+ "
      "\001(\r:\0011\022\025\n\004misc\0303 \003(\0132\007.Scalar\022\025\n\raction_"
      "status\030= \001(\005\"%\n\014ActionStatus\022\010\n\004FREE\020\000\022\013"
      "\n\007BLOCKED\020\001\"\'\n\013ActionBatch\022\030\n\007entries\030\001 "
      "\003(\0132\007.Action"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 412);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "action.proto", &protobuf_RegisterTypes);
  ::protobuf_scalar_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_action_2eproto

const ::google::protobuf::EnumDescriptor* Action_ActionStatus_descriptor() {
  protobuf_action_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_2eproto::file_level_enum_descriptors[0];
}
bool Action_ActionStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Action_ActionStatus Action::FREE;
const Action_ActionStatus Action::BLOCKED;
const Action_ActionStatus Action::ActionStatus_MIN;
const Action_ActionStatus Action::ActionStatus_MAX;
const int Action::ActionStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Action::kClientMachineFieldNumber;
const int Action::kClientChannelFieldNumber;
const int Action::kStoreFieldNumber;
const int Action::kActionTypeFieldNumber;
const int Action::kReadOnlyFieldNumber;
const int Action::kInputFieldNumber;
const int Action::kOutputFieldNumber;
const int Action::kReadsetFieldNumber;
const int Action::kWritesetFieldNumber;
const int Action::kVersionFieldNumber;
const int Action::kVersionOffsetFieldNumber;
const int Action::kInvolvedMachinesFieldNumber;
const int Action::kMiscFieldNumber;
const int Action::kActionStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Action::Action()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_action_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Action)
}
Action::Action(const Action& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      readset_(from.readset_),
      writeset_(from.writeset_),
      misc_(from.misc_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_client_channel()) {
    client_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_channel_);
  }
  store_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_store()) {
    store_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.store_);
  }
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_input()) {
    input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_output()) {
    output_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_);
  }
  ::memcpy(&client_machine_, &from.client_machine_,
    reinterpret_cast<char*>(&involved_machines_) -
    reinterpret_cast<char*>(&client_machine_) + sizeof(involved_machines_));
  // @@protoc_insertion_point(copy_constructor:Action)
}

void Action::SharedCtor() {
  _cached_size_ = 0;
  client_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&client_machine_, 0, reinterpret_cast<char*>(&version_offset_) -
    reinterpret_cast<char*>(&client_machine_) + sizeof(version_offset_));
  involved_machines_ = 1u;
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:Action)
  SharedDtor();
}

void Action::SharedDtor() {
  client_channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Action::descriptor() {
  protobuf_action_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Action& Action::default_instance() {
  protobuf_action_2eproto::InitDefaults();
  return *internal_default_instance();
}

Action* Action::New(::google::protobuf::Arena* arena) const {
  Action* n = new Action;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:Action)
  readset_.Clear();
  writeset_.Clear();
  misc_.Clear();
  if (_has_bits_[0 / 32] & 15u) {
    if (has_client_channel()) {
      GOOGLE_DCHECK(!client_channel_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*client_channel_.UnsafeRawStringPointer())->clear();
    }
    if (has_store()) {
      GOOGLE_DCHECK(!store_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*store_.UnsafeRawStringPointer())->clear();
    }
    if (has_input()) {
      GOOGLE_DCHECK(!input_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*input_.UnsafeRawStringPointer())->clear();
    }
    if (has_output()) {
      GOOGLE_DCHECK(!output_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*output_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&client_machine_, 0, reinterpret_cast<char*>(&action_status_) -
      reinterpret_cast<char*>(&client_machine_) + sizeof(action_status_));
  }
  if (_has_bits_[8 / 32] & 1792u) {
    ::memset(&version_, 0, reinterpret_cast<char*>(&version_offset_) -
      reinterpret_cast<char*>(&version_) + sizeof(version_offset_));
    involved_machines_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Action)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 client_machine = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_client_machine();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &client_machine_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string client_channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->client_channel().data(), this->client_channel().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Action.client_channel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string store = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_store()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->store().data(), this->store().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Action.store");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 action_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_action_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool read_only = 13 [default = false];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_read_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &read_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes input = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes output = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes readset = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_readset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes writeset = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_writeset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 version = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 version_offset = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(256u)) {
          set_has_version_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 involved_machines = 43 [default = 1];
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(344u)) {
          set_has_involved_machines();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &involved_machines_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Scalar misc = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(410u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_misc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 action_status = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(488u)) {
          set_has_action_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Action)
  return false;
#undef DO_
}

void Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 client_machine = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->client_machine(), output);
  }

  // optional string client_channel = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->client_channel().data(), this->client_channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.client_channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->client_channel(), output);
  }

  // optional string store = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store().data(), this->store().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.store");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->store(), output);
  }

  // required int32 action_type = 12;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->action_type(), output);
  }

  // optional bool read_only = 13 [default = false];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->read_only(), output);
  }

  // required bytes input = 14;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->input(), output);
  }

  // optional bytes output = 15;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->output(), output);
  }

  // repeated bytes readset = 21;
  for (int i = 0, n = this->readset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      21, this->readset(i), output);
  }

  // repeated bytes writeset = 22;
  for (int i = 0, n = this->writeset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      22, this->writeset(i), output);
  }

  // optional uint64 version = 31;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(31, this->version(), output);
  }

  // optional uint64 version_offset = 32;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(32, this->version_offset(), output);
  }

  // optional uint32 involved_machines = 43 [default = 1];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(43, this->involved_machines(), output);
  }

  // repeated .Scalar misc = 51;
  for (unsigned int i = 0, n = this->misc_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->misc(i), output);
  }

  // optional int32 action_status = 61;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(61, this->action_status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Action)
}

::google::protobuf::uint8* Action::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 client_machine = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->client_machine(), target);
  }

  // optional string client_channel = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->client_channel().data(), this->client_channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.client_channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->client_channel(), target);
  }

  // optional string store = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store().data(), this->store().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.store");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->store(), target);
  }

  // required int32 action_type = 12;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->action_type(), target);
  }

  // optional bool read_only = 13 [default = false];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->read_only(), target);
  }

  // required bytes input = 14;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->input(), target);
  }

  // optional bytes output = 15;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->output(), target);
  }

  // repeated bytes readset = 21;
  for (int i = 0, n = this->readset_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(21, this->readset(i), target);
  }

  // repeated bytes writeset = 22;
  for (int i = 0, n = this->writeset_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(22, this->writeset(i), target);
  }

  // optional uint64 version = 31;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(31, this->version(), target);
  }

  // optional uint64 version_offset = 32;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(32, this->version_offset(), target);
  }

  // optional uint32 involved_machines = 43 [default = 1];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(43, this->involved_machines(), target);
  }

  // repeated .Scalar misc = 51;
  for (unsigned int i = 0, n = this->misc_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        51, this->misc(i), deterministic, target);
  }

  // optional int32 action_status = 61;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(61, this->action_status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Action)
  return target;
}

size_t Action::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Action)
  size_t total_size = 0;

  if (has_input()) {
    // required bytes input = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->input());
  }

  if (has_action_type()) {
    // required int32 action_type = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action_type());
  }

  return total_size;
}
size_t Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Action)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000024) ^ 0x00000024) == 0) {  // All required fields are present.
    // required bytes input = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->input());

    // required int32 action_type = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated bytes readset = 21;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->readset_size());
  for (int i = 0, n = this->readset_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->readset(i));
  }

  // repeated bytes writeset = 22;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->writeset_size());
  for (int i = 0, n = this->writeset_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->writeset(i));
  }

  // repeated .Scalar misc = 51;
  {
    unsigned int count = this->misc_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->misc(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string client_channel = 2;
    if (has_client_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->client_channel());
    }

    // optional string store = 11;
    if (has_store()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->store());
    }

  }
  if (_has_bits_[0 / 32] & 24u) {
    // optional bytes output = 15;
    if (has_output()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->output());
    }

    // optional uint64 client_machine = 1;
    if (has_client_machine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->client_machine());
    }

  }
  if (_has_bits_[0 / 32] & 192u) {
    // optional bool read_only = 13 [default = false];
    if (has_read_only()) {
      total_size += 1 + 1;
    }

    // optional int32 action_status = 61;
    if (has_action_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action_status());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional uint64 version = 31;
    if (has_version()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->version());
    }

    // optional uint64 version_offset = 32;
    if (has_version_offset()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->version_offset());
    }

    // optional uint32 involved_machines = 43 [default = 1];
    if (has_involved_machines()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->involved_machines());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Action)
  GOOGLE_DCHECK_NE(&from, this);
  const Action* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Action>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Action)
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  readset_.MergeFrom(from.readset_);
  writeset_.MergeFrom(from.writeset_);
  misc_.MergeFrom(from.misc_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_client_channel();
      client_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_channel_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_store();
      store_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.store_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_input();
      input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_output();
      output_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_);
    }
    if (cached_has_bits & 0x00000010u) {
      client_machine_ = from.client_machine_;
    }
    if (cached_has_bits & 0x00000020u) {
      action_type_ = from.action_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      read_only_ = from.read_only_;
    }
    if (cached_has_bits & 0x00000080u) {
      action_status_ = from.action_status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000200u) {
      version_offset_ = from.version_offset_;
    }
    if (cached_has_bits & 0x00000400u) {
      involved_machines_ = from.involved_machines_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000024) != 0x00000024) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->misc())) return false;
  return true;
}

void Action::Swap(Action* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Action::InternalSwap(Action* other) {
  readset_.InternalSwap(&other->readset_);
  writeset_.InternalSwap(&other->writeset_);
  misc_.InternalSwap(&other->misc_);
  client_channel_.Swap(&other->client_channel_);
  store_.Swap(&other->store_);
  input_.Swap(&other->input_);
  output_.Swap(&other->output_);
  std::swap(client_machine_, other->client_machine_);
  std::swap(action_type_, other->action_type_);
  std::swap(read_only_, other->read_only_);
  std::swap(action_status_, other->action_status_);
  std::swap(version_, other->version_);
  std::swap(version_offset_, other->version_offset_);
  std::swap(involved_machines_, other->involved_machines_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Action::GetMetadata() const {
  protobuf_action_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Action

// optional uint64 client_machine = 1;
bool Action::has_client_machine() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Action::set_has_client_machine() {
  _has_bits_[0] |= 0x00000010u;
}
void Action::clear_has_client_machine() {
  _has_bits_[0] &= ~0x00000010u;
}
void Action::clear_client_machine() {
  client_machine_ = GOOGLE_ULONGLONG(0);
  clear_has_client_machine();
}
::google::protobuf::uint64 Action::client_machine() const {
  // @@protoc_insertion_point(field_get:Action.client_machine)
  return client_machine_;
}
void Action::set_client_machine(::google::protobuf::uint64 value) {
  set_has_client_machine();
  client_machine_ = value;
  // @@protoc_insertion_point(field_set:Action.client_machine)
}

// optional string client_channel = 2;
bool Action::has_client_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Action::set_has_client_channel() {
  _has_bits_[0] |= 0x00000001u;
}
void Action::clear_has_client_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
void Action::clear_client_channel() {
  client_channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_channel();
}
const ::std::string& Action::client_channel() const {
  // @@protoc_insertion_point(field_get:Action.client_channel)
  return client_channel_.GetNoArena();
}
void Action::set_client_channel(const ::std::string& value) {
  set_has_client_channel();
  client_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Action.client_channel)
}
#if LANG_CXX11
void Action::set_client_channel(::std::string&& value) {
  set_has_client_channel();
  client_channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Action.client_channel)
}
#endif
void Action::set_client_channel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client_channel();
  client_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Action.client_channel)
}
void Action::set_client_channel(const char* value, size_t size) {
  set_has_client_channel();
  client_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Action.client_channel)
}
::std::string* Action::mutable_client_channel() {
  set_has_client_channel();
  // @@protoc_insertion_point(field_mutable:Action.client_channel)
  return client_channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Action::release_client_channel() {
  // @@protoc_insertion_point(field_release:Action.client_channel)
  clear_has_client_channel();
  return client_channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Action::set_allocated_client_channel(::std::string* client_channel) {
  if (client_channel != NULL) {
    set_has_client_channel();
  } else {
    clear_has_client_channel();
  }
  client_channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_channel);
  // @@protoc_insertion_point(field_set_allocated:Action.client_channel)
}

// optional string store = 11;
bool Action::has_store() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Action::set_has_store() {
  _has_bits_[0] |= 0x00000002u;
}
void Action::clear_has_store() {
  _has_bits_[0] &= ~0x00000002u;
}
void Action::clear_store() {
  store_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_store();
}
const ::std::string& Action::store() const {
  // @@protoc_insertion_point(field_get:Action.store)
  return store_.GetNoArena();
}
void Action::set_store(const ::std::string& value) {
  set_has_store();
  store_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Action.store)
}
#if LANG_CXX11
void Action::set_store(::std::string&& value) {
  set_has_store();
  store_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Action.store)
}
#endif
void Action::set_store(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_store();
  store_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Action.store)
}
void Action::set_store(const char* value, size_t size) {
  set_has_store();
  store_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Action.store)
}
::std::string* Action::mutable_store() {
  set_has_store();
  // @@protoc_insertion_point(field_mutable:Action.store)
  return store_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Action::release_store() {
  // @@protoc_insertion_point(field_release:Action.store)
  clear_has_store();
  return store_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Action::set_allocated_store(::std::string* store) {
  if (store != NULL) {
    set_has_store();
  } else {
    clear_has_store();
  }
  store_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store);
  // @@protoc_insertion_point(field_set_allocated:Action.store)
}

// required int32 action_type = 12;
bool Action::has_action_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Action::set_has_action_type() {
  _has_bits_[0] |= 0x00000020u;
}
void Action::clear_has_action_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void Action::clear_action_type() {
  action_type_ = 0;
  clear_has_action_type();
}
::google::protobuf::int32 Action::action_type() const {
  // @@protoc_insertion_point(field_get:Action.action_type)
  return action_type_;
}
void Action::set_action_type(::google::protobuf::int32 value) {
  set_has_action_type();
  action_type_ = value;
  // @@protoc_insertion_point(field_set:Action.action_type)
}

// optional bool read_only = 13 [default = false];
bool Action::has_read_only() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Action::set_has_read_only() {
  _has_bits_[0] |= 0x00000040u;
}
void Action::clear_has_read_only() {
  _has_bits_[0] &= ~0x00000040u;
}
void Action::clear_read_only() {
  read_only_ = false;
  clear_has_read_only();
}
bool Action::read_only() const {
  // @@protoc_insertion_point(field_get:Action.read_only)
  return read_only_;
}
void Action::set_read_only(bool value) {
  set_has_read_only();
  read_only_ = value;
  // @@protoc_insertion_point(field_set:Action.read_only)
}

// required bytes input = 14;
bool Action::has_input() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Action::set_has_input() {
  _has_bits_[0] |= 0x00000004u;
}
void Action::clear_has_input() {
  _has_bits_[0] &= ~0x00000004u;
}
void Action::clear_input() {
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_input();
}
const ::std::string& Action::input() const {
  // @@protoc_insertion_point(field_get:Action.input)
  return input_.GetNoArena();
}
void Action::set_input(const ::std::string& value) {
  set_has_input();
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Action.input)
}
#if LANG_CXX11
void Action::set_input(::std::string&& value) {
  set_has_input();
  input_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Action.input)
}
#endif
void Action::set_input(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_input();
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Action.input)
}
void Action::set_input(const void* value, size_t size) {
  set_has_input();
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Action.input)
}
::std::string* Action::mutable_input() {
  set_has_input();
  // @@protoc_insertion_point(field_mutable:Action.input)
  return input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Action::release_input() {
  // @@protoc_insertion_point(field_release:Action.input)
  clear_has_input();
  return input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Action::set_allocated_input(::std::string* input) {
  if (input != NULL) {
    set_has_input();
  } else {
    clear_has_input();
  }
  input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input);
  // @@protoc_insertion_point(field_set_allocated:Action.input)
}

// optional bytes output = 15;
bool Action::has_output() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Action::set_has_output() {
  _has_bits_[0] |= 0x00000008u;
}
void Action::clear_has_output() {
  _has_bits_[0] &= ~0x00000008u;
}
void Action::clear_output() {
  output_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output();
}
const ::std::string& Action::output() const {
  // @@protoc_insertion_point(field_get:Action.output)
  return output_.GetNoArena();
}
void Action::set_output(const ::std::string& value) {
  set_has_output();
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Action.output)
}
#if LANG_CXX11
void Action::set_output(::std::string&& value) {
  set_has_output();
  output_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Action.output)
}
#endif
void Action::set_output(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_output();
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Action.output)
}
void Action::set_output(const void* value, size_t size) {
  set_has_output();
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Action.output)
}
::std::string* Action::mutable_output() {
  set_has_output();
  // @@protoc_insertion_point(field_mutable:Action.output)
  return output_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Action::release_output() {
  // @@protoc_insertion_point(field_release:Action.output)
  clear_has_output();
  return output_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Action::set_allocated_output(::std::string* output) {
  if (output != NULL) {
    set_has_output();
  } else {
    clear_has_output();
  }
  output_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output);
  // @@protoc_insertion_point(field_set_allocated:Action.output)
}

// repeated bytes readset = 21;
int Action::readset_size() const {
  return readset_.size();
}
void Action::clear_readset() {
  readset_.Clear();
}
const ::std::string& Action::readset(int index) const {
  // @@protoc_insertion_point(field_get:Action.readset)
  return readset_.Get(index);
}
::std::string* Action::mutable_readset(int index) {
  // @@protoc_insertion_point(field_mutable:Action.readset)
  return readset_.Mutable(index);
}
void Action::set_readset(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Action.readset)
  readset_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Action::set_readset(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Action.readset)
  readset_.Mutable(index)->assign(std::move(value));
}
#endif
void Action::set_readset(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  readset_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Action.readset)
}
void Action::set_readset(int index, const void* value, size_t size) {
  readset_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Action.readset)
}
::std::string* Action::add_readset() {
  // @@protoc_insertion_point(field_add_mutable:Action.readset)
  return readset_.Add();
}
void Action::add_readset(const ::std::string& value) {
  readset_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Action.readset)
}
#if LANG_CXX11
void Action::add_readset(::std::string&& value) {
  readset_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Action.readset)
}
#endif
void Action::add_readset(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  readset_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Action.readset)
}
void Action::add_readset(const void* value, size_t size) {
  readset_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Action.readset)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Action::readset() const {
  // @@protoc_insertion_point(field_list:Action.readset)
  return readset_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Action::mutable_readset() {
  // @@protoc_insertion_point(field_mutable_list:Action.readset)
  return &readset_;
}

// repeated bytes writeset = 22;
int Action::writeset_size() const {
  return writeset_.size();
}
void Action::clear_writeset() {
  writeset_.Clear();
}
const ::std::string& Action::writeset(int index) const {
  // @@protoc_insertion_point(field_get:Action.writeset)
  return writeset_.Get(index);
}
::std::string* Action::mutable_writeset(int index) {
  // @@protoc_insertion_point(field_mutable:Action.writeset)
  return writeset_.Mutable(index);
}
void Action::set_writeset(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Action.writeset)
  writeset_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Action::set_writeset(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Action.writeset)
  writeset_.Mutable(index)->assign(std::move(value));
}
#endif
void Action::set_writeset(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  writeset_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Action.writeset)
}
void Action::set_writeset(int index, const void* value, size_t size) {
  writeset_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Action.writeset)
}
::std::string* Action::add_writeset() {
  // @@protoc_insertion_point(field_add_mutable:Action.writeset)
  return writeset_.Add();
}
void Action::add_writeset(const ::std::string& value) {
  writeset_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Action.writeset)
}
#if LANG_CXX11
void Action::add_writeset(::std::string&& value) {
  writeset_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Action.writeset)
}
#endif
void Action::add_writeset(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  writeset_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Action.writeset)
}
void Action::add_writeset(const void* value, size_t size) {
  writeset_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Action.writeset)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Action::writeset() const {
  // @@protoc_insertion_point(field_list:Action.writeset)
  return writeset_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Action::mutable_writeset() {
  // @@protoc_insertion_point(field_mutable_list:Action.writeset)
  return &writeset_;
}

// optional uint64 version = 31;
bool Action::has_version() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Action::set_has_version() {
  _has_bits_[0] |= 0x00000100u;
}
void Action::clear_has_version() {
  _has_bits_[0] &= ~0x00000100u;
}
void Action::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
::google::protobuf::uint64 Action::version() const {
  // @@protoc_insertion_point(field_get:Action.version)
  return version_;
}
void Action::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Action.version)
}

// optional uint64 version_offset = 32;
bool Action::has_version_offset() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Action::set_has_version_offset() {
  _has_bits_[0] |= 0x00000200u;
}
void Action::clear_has_version_offset() {
  _has_bits_[0] &= ~0x00000200u;
}
void Action::clear_version_offset() {
  version_offset_ = GOOGLE_ULONGLONG(0);
  clear_has_version_offset();
}
::google::protobuf::uint64 Action::version_offset() const {
  // @@protoc_insertion_point(field_get:Action.version_offset)
  return version_offset_;
}
void Action::set_version_offset(::google::protobuf::uint64 value) {
  set_has_version_offset();
  version_offset_ = value;
  // @@protoc_insertion_point(field_set:Action.version_offset)
}

// optional uint32 involved_machines = 43 [default = 1];
bool Action::has_involved_machines() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Action::set_has_involved_machines() {
  _has_bits_[0] |= 0x00000400u;
}
void Action::clear_has_involved_machines() {
  _has_bits_[0] &= ~0x00000400u;
}
void Action::clear_involved_machines() {
  involved_machines_ = 1u;
  clear_has_involved_machines();
}
::google::protobuf::uint32 Action::involved_machines() const {
  // @@protoc_insertion_point(field_get:Action.involved_machines)
  return involved_machines_;
}
void Action::set_involved_machines(::google::protobuf::uint32 value) {
  set_has_involved_machines();
  involved_machines_ = value;
  // @@protoc_insertion_point(field_set:Action.involved_machines)
}

// repeated .Scalar misc = 51;
int Action::misc_size() const {
  return misc_.size();
}
void Action::clear_misc() {
  misc_.Clear();
}
const ::Scalar& Action::misc(int index) const {
  // @@protoc_insertion_point(field_get:Action.misc)
  return misc_.Get(index);
}
::Scalar* Action::mutable_misc(int index) {
  // @@protoc_insertion_point(field_mutable:Action.misc)
  return misc_.Mutable(index);
}
::Scalar* Action::add_misc() {
  // @@protoc_insertion_point(field_add:Action.misc)
  return misc_.Add();
}
::google::protobuf::RepeatedPtrField< ::Scalar >*
Action::mutable_misc() {
  // @@protoc_insertion_point(field_mutable_list:Action.misc)
  return &misc_;
}
const ::google::protobuf::RepeatedPtrField< ::Scalar >&
Action::misc() const {
  // @@protoc_insertion_point(field_list:Action.misc)
  return misc_;
}

// optional int32 action_status = 61;
bool Action::has_action_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Action::set_has_action_status() {
  _has_bits_[0] |= 0x00000080u;
}
void Action::clear_has_action_status() {
  _has_bits_[0] &= ~0x00000080u;
}
void Action::clear_action_status() {
  action_status_ = 0;
  clear_has_action_status();
}
::google::protobuf::int32 Action::action_status() const {
  // @@protoc_insertion_point(field_get:Action.action_status)
  return action_status_;
}
void Action::set_action_status(::google::protobuf::int32 value) {
  set_has_action_status();
  action_status_ = value;
  // @@protoc_insertion_point(field_set:Action.action_status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionBatch::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionBatch::ActionBatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_action_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActionBatch)
}
ActionBatch::ActionBatch(const ActionBatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ActionBatch)
}

void ActionBatch::SharedCtor() {
  _cached_size_ = 0;
}

ActionBatch::~ActionBatch() {
  // @@protoc_insertion_point(destructor:ActionBatch)
  SharedDtor();
}

void ActionBatch::SharedDtor() {
}

void ActionBatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionBatch::descriptor() {
  protobuf_action_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionBatch& ActionBatch::default_instance() {
  protobuf_action_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActionBatch* ActionBatch::New(::google::protobuf::Arena* arena) const {
  ActionBatch* n = new ActionBatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:ActionBatch)
  entries_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActionBatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActionBatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Action entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActionBatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActionBatch)
  return false;
#undef DO_
}

void ActionBatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActionBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Action entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActionBatch)
}

::google::protobuf::uint8* ActionBatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActionBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Action entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entries(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActionBatch)
  return target;
}

size_t ActionBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActionBatch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .Action entries = 1;
  {
    unsigned int count = this->entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entries(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionBatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActionBatch)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionBatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionBatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActionBatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActionBatch)
    MergeFrom(*source);
  }
}

void ActionBatch::MergeFrom(const ActionBatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActionBatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void ActionBatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActionBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionBatch::CopyFrom(const ActionBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActionBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionBatch::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->entries())) return false;
  return true;
}

void ActionBatch::Swap(ActionBatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionBatch::InternalSwap(ActionBatch* other) {
  entries_.InternalSwap(&other->entries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionBatch::GetMetadata() const {
  protobuf_action_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActionBatch

// repeated .Action entries = 1;
int ActionBatch::entries_size() const {
  return entries_.size();
}
void ActionBatch::clear_entries() {
  entries_.Clear();
}
const ::Action& ActionBatch::entries(int index) const {
  // @@protoc_insertion_point(field_get:ActionBatch.entries)
  return entries_.Get(index);
}
::Action* ActionBatch::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:ActionBatch.entries)
  return entries_.Mutable(index);
}
::Action* ActionBatch::add_entries() {
  // @@protoc_insertion_point(field_add:ActionBatch.entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::Action >*
ActionBatch::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:ActionBatch.entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::Action >&
ActionBatch::entries() const {
  // @@protoc_insertion_point(field_list:ActionBatch.entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
