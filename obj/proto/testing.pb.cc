// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: testing.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "testing.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ADefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<A> {
} _A_default_instance_;
class BDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<B> {
} _B_default_instance_;

namespace protobuf_testing_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(A, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(A, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(A, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(A, s_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(B, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(B, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(B, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(B, b_),
  ~0u,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(A)},
  { 9, 16, sizeof(B)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_A_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_B_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "testing.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _A_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _B_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _A_default_instance_.DefaultConstruct();
  _B_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rtesting.proto\"\031\n\001A\022\t\n\001x\030\001 \003(\005\022\t\n\001s\030\002 \003"
      "(\014\"!\n\001B\022\r\n\001a\030\001 \003(\0132\002.A\022\r\n\001b\030\002 \003(\0132\002.B"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 77);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "testing.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_testing_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int A::kXFieldNumber;
const int A::kSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

A::A()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_testing_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:A)
}
A::A(const A& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      x_(from.x_),
      s_(from.s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:A)
}

void A::SharedCtor() {
  _cached_size_ = 0;
}

A::~A() {
  // @@protoc_insertion_point(destructor:A)
  SharedDtor();
}

void A::SharedDtor() {
}

void A::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* A::descriptor() {
  protobuf_testing_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_testing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const A& A::default_instance() {
  protobuf_testing_2eproto::InitDefaults();
  return *internal_default_instance();
}

A* A::New(::google::protobuf::Arena* arena) const {
  A* n = new A;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void A::Clear() {
// @@protoc_insertion_point(message_clear_start:A)
  x_.Clear();
  s_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool A::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:A)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_x())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_x())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:A)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:A)
  return false;
#undef DO_
}

void A::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:A)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 x = 1;
  for (int i = 0, n = this->x_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->x(i), output);
  }

  // repeated bytes s = 2;
  for (int i = 0, n = this->s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:A)
}

::google::protobuf::uint8* A::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:A)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 x = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->x_, target);

  // repeated bytes s = 2;
  for (int i = 0, n = this->s_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->s(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:A)
  return target;
}

size_t A::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:A)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 x = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->x_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->x_size());
    total_size += data_size;
  }

  // repeated bytes s = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->s_size());
  for (int i = 0, n = this->s_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->s(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void A::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:A)
  GOOGLE_DCHECK_NE(&from, this);
  const A* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const A>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:A)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:A)
    MergeFrom(*source);
  }
}

void A::MergeFrom(const A& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:A)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  x_.MergeFrom(from.x_);
  s_.MergeFrom(from.s_);
}

void A::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:A)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void A::CopyFrom(const A& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:A)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool A::IsInitialized() const {
  return true;
}

void A::Swap(A* other) {
  if (other == this) return;
  InternalSwap(other);
}
void A::InternalSwap(A* other) {
  x_.InternalSwap(&other->x_);
  s_.InternalSwap(&other->s_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata A::GetMetadata() const {
  protobuf_testing_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_testing_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// A

// repeated int32 x = 1;
int A::x_size() const {
  return x_.size();
}
void A::clear_x() {
  x_.Clear();
}
::google::protobuf::int32 A::x(int index) const {
  // @@protoc_insertion_point(field_get:A.x)
  return x_.Get(index);
}
void A::set_x(int index, ::google::protobuf::int32 value) {
  x_.Set(index, value);
  // @@protoc_insertion_point(field_set:A.x)
}
void A::add_x(::google::protobuf::int32 value) {
  x_.Add(value);
  // @@protoc_insertion_point(field_add:A.x)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
A::x() const {
  // @@protoc_insertion_point(field_list:A.x)
  return x_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
A::mutable_x() {
  // @@protoc_insertion_point(field_mutable_list:A.x)
  return &x_;
}

// repeated bytes s = 2;
int A::s_size() const {
  return s_.size();
}
void A::clear_s() {
  s_.Clear();
}
const ::std::string& A::s(int index) const {
  // @@protoc_insertion_point(field_get:A.s)
  return s_.Get(index);
}
::std::string* A::mutable_s(int index) {
  // @@protoc_insertion_point(field_mutable:A.s)
  return s_.Mutable(index);
}
void A::set_s(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:A.s)
  s_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void A::set_s(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:A.s)
  s_.Mutable(index)->assign(std::move(value));
}
#endif
void A::set_s(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  s_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:A.s)
}
void A::set_s(int index, const void* value, size_t size) {
  s_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:A.s)
}
::std::string* A::add_s() {
  // @@protoc_insertion_point(field_add_mutable:A.s)
  return s_.Add();
}
void A::add_s(const ::std::string& value) {
  s_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:A.s)
}
#if LANG_CXX11
void A::add_s(::std::string&& value) {
  s_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:A.s)
}
#endif
void A::add_s(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  s_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:A.s)
}
void A::add_s(const void* value, size_t size) {
  s_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:A.s)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
A::s() const {
  // @@protoc_insertion_point(field_list:A.s)
  return s_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
A::mutable_s() {
  // @@protoc_insertion_point(field_mutable_list:A.s)
  return &s_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B::kAFieldNumber;
const int B::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B::B()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_testing_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:B)
}
B::B(const B& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      a_(from.a_),
      b_(from.b_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:B)
}

void B::SharedCtor() {
  _cached_size_ = 0;
}

B::~B() {
  // @@protoc_insertion_point(destructor:B)
  SharedDtor();
}

void B::SharedDtor() {
}

void B::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* B::descriptor() {
  protobuf_testing_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_testing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B& B::default_instance() {
  protobuf_testing_2eproto::InitDefaults();
  return *internal_default_instance();
}

B* B::New(::google::protobuf::Arena* arena) const {
  B* n = new B;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void B::Clear() {
// @@protoc_insertion_point(message_clear_start:B)
  a_.Clear();
  b_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool B::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:B)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .A a = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_a()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .B b = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_b()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:B)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:B)
  return false;
#undef DO_
}

void B::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:B)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .A a = 1;
  for (unsigned int i = 0, n = this->a_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->a(i), output);
  }

  // repeated .B b = 2;
  for (unsigned int i = 0, n = this->b_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->b(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:B)
}

::google::protobuf::uint8* B::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:B)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .A a = 1;
  for (unsigned int i = 0, n = this->a_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->a(i), deterministic, target);
  }

  // repeated .B b = 2;
  for (unsigned int i = 0, n = this->b_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->b(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:B)
  return target;
}

size_t B::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:B)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .A a = 1;
  {
    unsigned int count = this->a_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->a(i));
    }
  }

  // repeated .B b = 2;
  {
    unsigned int count = this->b_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->b(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void B::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:B)
  GOOGLE_DCHECK_NE(&from, this);
  const B* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:B)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:B)
    MergeFrom(*source);
  }
}

void B::MergeFrom(const B& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:B)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  a_.MergeFrom(from.a_);
  b_.MergeFrom(from.b_);
}

void B::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:B)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B::CopyFrom(const B& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:B)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B::IsInitialized() const {
  return true;
}

void B::Swap(B* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B::InternalSwap(B* other) {
  a_.InternalSwap(&other->a_);
  b_.InternalSwap(&other->b_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata B::GetMetadata() const {
  protobuf_testing_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_testing_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// B

// repeated .A a = 1;
int B::a_size() const {
  return a_.size();
}
void B::clear_a() {
  a_.Clear();
}
const ::A& B::a(int index) const {
  // @@protoc_insertion_point(field_get:B.a)
  return a_.Get(index);
}
::A* B::mutable_a(int index) {
  // @@protoc_insertion_point(field_mutable:B.a)
  return a_.Mutable(index);
}
::A* B::add_a() {
  // @@protoc_insertion_point(field_add:B.a)
  return a_.Add();
}
::google::protobuf::RepeatedPtrField< ::A >*
B::mutable_a() {
  // @@protoc_insertion_point(field_mutable_list:B.a)
  return &a_;
}
const ::google::protobuf::RepeatedPtrField< ::A >&
B::a() const {
  // @@protoc_insertion_point(field_list:B.a)
  return a_;
}

// repeated .B b = 2;
int B::b_size() const {
  return b_.size();
}
void B::clear_b() {
  b_.Clear();
}
const ::B& B::b(int index) const {
  // @@protoc_insertion_point(field_get:B.b)
  return b_.Get(index);
}
::B* B::mutable_b(int index) {
  // @@protoc_insertion_point(field_mutable:B.b)
  return b_.Mutable(index);
}
::B* B::add_b() {
  // @@protoc_insertion_point(field_add:B.b)
  return b_.Add();
}
::google::protobuf::RepeatedPtrField< ::B >*
B::mutable_b() {
  // @@protoc_insertion_point(field_mutable_list:B.b)
  return &b_;
}
const ::google::protobuf::RepeatedPtrField< ::B >&
B::b() const {
  // @@protoc_insertion_point(field_list:B.b)
  return b_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
