// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calvinfs_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "calvinfs_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class CalvinFSConfig_ReplicaParticipantDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CalvinFSConfig_ReplicaParticipant> {
} _CalvinFSConfig_ReplicaParticipant_default_instance_;
class CalvinFSConfig_MapEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CalvinFSConfig_MapEntry> {
} _CalvinFSConfig_MapEntry_default_instance_;
class CalvinFSConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CalvinFSConfig> {
} _CalvinFSConfig_default_instance_;
class MapProto_EntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MapProto_Entry> {
} _MapProto_Entry_default_instance_;
class MapProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MapProto> {
} _MapProto_default_instance_;

namespace protobuf_calvinfs_5fconfig_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_ReplicaParticipant, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_ReplicaParticipant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_ReplicaParticipant, machine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_ReplicaParticipant, replica_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_MapEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_MapEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_MapEntry, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_MapEntry, replica_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_MapEntry, machine_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, block_replication_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, metadata_replication_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, blucket_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, metadata_shard_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, replicas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, bluckets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, metadata_shards_),
  0,
  1,
  2,
  3,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapProto_Entry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapProto_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapProto_Entry, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapProto_Entry, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapProto, entries_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(CalvinFSConfig_ReplicaParticipant)},
  { 9, 17, sizeof(CalvinFSConfig_MapEntry)},
  { 20, 32, sizeof(CalvinFSConfig)},
  { 39, 46, sizeof(MapProto_Entry)},
  { 48, 54, sizeof(MapProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CalvinFSConfig_ReplicaParticipant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CalvinFSConfig_MapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CalvinFSConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MapProto_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MapProto_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "calvinfs_config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _CalvinFSConfig_ReplicaParticipant_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CalvinFSConfig_MapEntry_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CalvinFSConfig_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _MapProto_Entry_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _MapProto_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CalvinFSConfig_ReplicaParticipant_default_instance_.DefaultConstruct();
  _CalvinFSConfig_MapEntry_default_instance_.DefaultConstruct();
  _CalvinFSConfig_default_instance_.DefaultConstruct();
  _MapProto_Entry_default_instance_.DefaultConstruct();
  _MapProto_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\025calvinfs_config.proto\"\231\003\n\016CalvinFSConf"
      "ig\022 \n\030block_replication_factor\030\001 \001(\004\022#\n\033"
      "metadata_replication_factor\030\002 \001(\004\022\025\n\rblu"
      "cket_count\030\003 \001(\004\022\034\n\024metadata_shard_count"
      "\030\004 \001(\004\0224\n\010replicas\030\013 \003(\0132\".CalvinFSConfi"
      "g.ReplicaParticipant\022*\n\010bluckets\030\025 \003(\0132\030"
      ".CalvinFSConfig.MapEntry\0221\n\017metadata_sha"
      "rds\030\037 \003(\0132\030.CalvinFSConfig.MapEntry\0326\n\022R"
      "eplicaParticipant\022\017\n\007machine\030\001 \001(\004\022\017\n\007re"
      "plica\030\002 \001(\004\032>\n\010MapEntry\022\n\n\002id\030\001 \001(\004\022\022\n\007r"
      "eplica\030\002 \001(\004:\0010\022\022\n\007machine\030\003 \001(\004:\0010\"Q\n\010M"
      "apProto\022 \n\007entries\030\001 \003(\0132\017.MapProto.Entr"
      "y\032#\n\005Entry\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001(\014"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 518);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "calvinfs_config.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_calvinfs_5fconfig_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalvinFSConfig_ReplicaParticipant::kMachineFieldNumber;
const int CalvinFSConfig_ReplicaParticipant::kReplicaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalvinFSConfig_ReplicaParticipant::CalvinFSConfig_ReplicaParticipant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_calvinfs_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CalvinFSConfig.ReplicaParticipant)
}
CalvinFSConfig_ReplicaParticipant::CalvinFSConfig_ReplicaParticipant(const CalvinFSConfig_ReplicaParticipant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&machine_, &from.machine_,
    reinterpret_cast<char*>(&replica_) -
    reinterpret_cast<char*>(&machine_) + sizeof(replica_));
  // @@protoc_insertion_point(copy_constructor:CalvinFSConfig.ReplicaParticipant)
}

void CalvinFSConfig_ReplicaParticipant::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&machine_, 0, reinterpret_cast<char*>(&replica_) -
    reinterpret_cast<char*>(&machine_) + sizeof(replica_));
}

CalvinFSConfig_ReplicaParticipant::~CalvinFSConfig_ReplicaParticipant() {
  // @@protoc_insertion_point(destructor:CalvinFSConfig.ReplicaParticipant)
  SharedDtor();
}

void CalvinFSConfig_ReplicaParticipant::SharedDtor() {
}

void CalvinFSConfig_ReplicaParticipant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalvinFSConfig_ReplicaParticipant::descriptor() {
  protobuf_calvinfs_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_calvinfs_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalvinFSConfig_ReplicaParticipant& CalvinFSConfig_ReplicaParticipant::default_instance() {
  protobuf_calvinfs_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

CalvinFSConfig_ReplicaParticipant* CalvinFSConfig_ReplicaParticipant::New(::google::protobuf::Arena* arena) const {
  CalvinFSConfig_ReplicaParticipant* n = new CalvinFSConfig_ReplicaParticipant;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalvinFSConfig_ReplicaParticipant::Clear() {
// @@protoc_insertion_point(message_clear_start:CalvinFSConfig.ReplicaParticipant)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&machine_, 0, reinterpret_cast<char*>(&replica_) -
      reinterpret_cast<char*>(&machine_) + sizeof(replica_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalvinFSConfig_ReplicaParticipant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CalvinFSConfig.ReplicaParticipant)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 machine = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_machine();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &machine_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 replica = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_replica();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &replica_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CalvinFSConfig.ReplicaParticipant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CalvinFSConfig.ReplicaParticipant)
  return false;
#undef DO_
}

void CalvinFSConfig_ReplicaParticipant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CalvinFSConfig.ReplicaParticipant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 machine = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->machine(), output);
  }

  // optional uint64 replica = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->replica(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CalvinFSConfig.ReplicaParticipant)
}

::google::protobuf::uint8* CalvinFSConfig_ReplicaParticipant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CalvinFSConfig.ReplicaParticipant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 machine = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->machine(), target);
  }

  // optional uint64 replica = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->replica(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CalvinFSConfig.ReplicaParticipant)
  return target;
}

size_t CalvinFSConfig_ReplicaParticipant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CalvinFSConfig.ReplicaParticipant)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 machine = 1;
    if (has_machine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->machine());
    }

    // optional uint64 replica = 2;
    if (has_replica()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->replica());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalvinFSConfig_ReplicaParticipant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CalvinFSConfig.ReplicaParticipant)
  GOOGLE_DCHECK_NE(&from, this);
  const CalvinFSConfig_ReplicaParticipant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalvinFSConfig_ReplicaParticipant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CalvinFSConfig.ReplicaParticipant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CalvinFSConfig.ReplicaParticipant)
    MergeFrom(*source);
  }
}

void CalvinFSConfig_ReplicaParticipant::MergeFrom(const CalvinFSConfig_ReplicaParticipant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CalvinFSConfig.ReplicaParticipant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      machine_ = from.machine_;
    }
    if (cached_has_bits & 0x00000002u) {
      replica_ = from.replica_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalvinFSConfig_ReplicaParticipant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CalvinFSConfig.ReplicaParticipant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalvinFSConfig_ReplicaParticipant::CopyFrom(const CalvinFSConfig_ReplicaParticipant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CalvinFSConfig.ReplicaParticipant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalvinFSConfig_ReplicaParticipant::IsInitialized() const {
  return true;
}

void CalvinFSConfig_ReplicaParticipant::Swap(CalvinFSConfig_ReplicaParticipant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalvinFSConfig_ReplicaParticipant::InternalSwap(CalvinFSConfig_ReplicaParticipant* other) {
  std::swap(machine_, other->machine_);
  std::swap(replica_, other->replica_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalvinFSConfig_ReplicaParticipant::GetMetadata() const {
  protobuf_calvinfs_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_calvinfs_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CalvinFSConfig_ReplicaParticipant

// optional uint64 machine = 1;
bool CalvinFSConfig_ReplicaParticipant::has_machine() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CalvinFSConfig_ReplicaParticipant::set_has_machine() {
  _has_bits_[0] |= 0x00000001u;
}
void CalvinFSConfig_ReplicaParticipant::clear_has_machine() {
  _has_bits_[0] &= ~0x00000001u;
}
void CalvinFSConfig_ReplicaParticipant::clear_machine() {
  machine_ = GOOGLE_ULONGLONG(0);
  clear_has_machine();
}
::google::protobuf::uint64 CalvinFSConfig_ReplicaParticipant::machine() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.ReplicaParticipant.machine)
  return machine_;
}
void CalvinFSConfig_ReplicaParticipant::set_machine(::google::protobuf::uint64 value) {
  set_has_machine();
  machine_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.ReplicaParticipant.machine)
}

// optional uint64 replica = 2;
bool CalvinFSConfig_ReplicaParticipant::has_replica() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CalvinFSConfig_ReplicaParticipant::set_has_replica() {
  _has_bits_[0] |= 0x00000002u;
}
void CalvinFSConfig_ReplicaParticipant::clear_has_replica() {
  _has_bits_[0] &= ~0x00000002u;
}
void CalvinFSConfig_ReplicaParticipant::clear_replica() {
  replica_ = GOOGLE_ULONGLONG(0);
  clear_has_replica();
}
::google::protobuf::uint64 CalvinFSConfig_ReplicaParticipant::replica() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.ReplicaParticipant.replica)
  return replica_;
}
void CalvinFSConfig_ReplicaParticipant::set_replica(::google::protobuf::uint64 value) {
  set_has_replica();
  replica_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.ReplicaParticipant.replica)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalvinFSConfig_MapEntry::kIdFieldNumber;
const int CalvinFSConfig_MapEntry::kReplicaFieldNumber;
const int CalvinFSConfig_MapEntry::kMachineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalvinFSConfig_MapEntry::CalvinFSConfig_MapEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_calvinfs_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CalvinFSConfig.MapEntry)
}
CalvinFSConfig_MapEntry::CalvinFSConfig_MapEntry(const CalvinFSConfig_MapEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&machine_) -
    reinterpret_cast<char*>(&id_) + sizeof(machine_));
  // @@protoc_insertion_point(copy_constructor:CalvinFSConfig.MapEntry)
}

void CalvinFSConfig_MapEntry::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, reinterpret_cast<char*>(&machine_) -
    reinterpret_cast<char*>(&id_) + sizeof(machine_));
}

CalvinFSConfig_MapEntry::~CalvinFSConfig_MapEntry() {
  // @@protoc_insertion_point(destructor:CalvinFSConfig.MapEntry)
  SharedDtor();
}

void CalvinFSConfig_MapEntry::SharedDtor() {
}

void CalvinFSConfig_MapEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalvinFSConfig_MapEntry::descriptor() {
  protobuf_calvinfs_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_calvinfs_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalvinFSConfig_MapEntry& CalvinFSConfig_MapEntry::default_instance() {
  protobuf_calvinfs_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

CalvinFSConfig_MapEntry* CalvinFSConfig_MapEntry::New(::google::protobuf::Arena* arena) const {
  CalvinFSConfig_MapEntry* n = new CalvinFSConfig_MapEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalvinFSConfig_MapEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:CalvinFSConfig.MapEntry)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&machine_) -
      reinterpret_cast<char*>(&id_) + sizeof(machine_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalvinFSConfig_MapEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CalvinFSConfig.MapEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 replica = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_replica();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &replica_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 machine = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_machine();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &machine_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CalvinFSConfig.MapEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CalvinFSConfig.MapEntry)
  return false;
#undef DO_
}

void CalvinFSConfig_MapEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CalvinFSConfig.MapEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional uint64 replica = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->replica(), output);
  }

  // optional uint64 machine = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->machine(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CalvinFSConfig.MapEntry)
}

::google::protobuf::uint8* CalvinFSConfig_MapEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CalvinFSConfig.MapEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional uint64 replica = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->replica(), target);
  }

  // optional uint64 machine = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->machine(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CalvinFSConfig.MapEntry)
  return target;
}

size_t CalvinFSConfig_MapEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CalvinFSConfig.MapEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint64 replica = 2 [default = 0];
    if (has_replica()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->replica());
    }

    // optional uint64 machine = 3 [default = 0];
    if (has_machine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->machine());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalvinFSConfig_MapEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CalvinFSConfig.MapEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const CalvinFSConfig_MapEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalvinFSConfig_MapEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CalvinFSConfig.MapEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CalvinFSConfig.MapEntry)
    MergeFrom(*source);
  }
}

void CalvinFSConfig_MapEntry::MergeFrom(const CalvinFSConfig_MapEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CalvinFSConfig.MapEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      replica_ = from.replica_;
    }
    if (cached_has_bits & 0x00000004u) {
      machine_ = from.machine_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalvinFSConfig_MapEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CalvinFSConfig.MapEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalvinFSConfig_MapEntry::CopyFrom(const CalvinFSConfig_MapEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CalvinFSConfig.MapEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalvinFSConfig_MapEntry::IsInitialized() const {
  return true;
}

void CalvinFSConfig_MapEntry::Swap(CalvinFSConfig_MapEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalvinFSConfig_MapEntry::InternalSwap(CalvinFSConfig_MapEntry* other) {
  std::swap(id_, other->id_);
  std::swap(replica_, other->replica_);
  std::swap(machine_, other->machine_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalvinFSConfig_MapEntry::GetMetadata() const {
  protobuf_calvinfs_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_calvinfs_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CalvinFSConfig_MapEntry

// optional uint64 id = 1;
bool CalvinFSConfig_MapEntry::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CalvinFSConfig_MapEntry::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CalvinFSConfig_MapEntry::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CalvinFSConfig_MapEntry::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
::google::protobuf::uint64 CalvinFSConfig_MapEntry::id() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.MapEntry.id)
  return id_;
}
void CalvinFSConfig_MapEntry::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.MapEntry.id)
}

// optional uint64 replica = 2 [default = 0];
bool CalvinFSConfig_MapEntry::has_replica() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CalvinFSConfig_MapEntry::set_has_replica() {
  _has_bits_[0] |= 0x00000002u;
}
void CalvinFSConfig_MapEntry::clear_has_replica() {
  _has_bits_[0] &= ~0x00000002u;
}
void CalvinFSConfig_MapEntry::clear_replica() {
  replica_ = GOOGLE_ULONGLONG(0);
  clear_has_replica();
}
::google::protobuf::uint64 CalvinFSConfig_MapEntry::replica() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.MapEntry.replica)
  return replica_;
}
void CalvinFSConfig_MapEntry::set_replica(::google::protobuf::uint64 value) {
  set_has_replica();
  replica_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.MapEntry.replica)
}

// optional uint64 machine = 3 [default = 0];
bool CalvinFSConfig_MapEntry::has_machine() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CalvinFSConfig_MapEntry::set_has_machine() {
  _has_bits_[0] |= 0x00000004u;
}
void CalvinFSConfig_MapEntry::clear_has_machine() {
  _has_bits_[0] &= ~0x00000004u;
}
void CalvinFSConfig_MapEntry::clear_machine() {
  machine_ = GOOGLE_ULONGLONG(0);
  clear_has_machine();
}
::google::protobuf::uint64 CalvinFSConfig_MapEntry::machine() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.MapEntry.machine)
  return machine_;
}
void CalvinFSConfig_MapEntry::set_machine(::google::protobuf::uint64 value) {
  set_has_machine();
  machine_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.MapEntry.machine)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalvinFSConfig::kBlockReplicationFactorFieldNumber;
const int CalvinFSConfig::kMetadataReplicationFactorFieldNumber;
const int CalvinFSConfig::kBlucketCountFieldNumber;
const int CalvinFSConfig::kMetadataShardCountFieldNumber;
const int CalvinFSConfig::kReplicasFieldNumber;
const int CalvinFSConfig::kBlucketsFieldNumber;
const int CalvinFSConfig::kMetadataShardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalvinFSConfig::CalvinFSConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_calvinfs_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CalvinFSConfig)
}
CalvinFSConfig::CalvinFSConfig(const CalvinFSConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      replicas_(from.replicas_),
      bluckets_(from.bluckets_),
      metadata_shards_(from.metadata_shards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&block_replication_factor_, &from.block_replication_factor_,
    reinterpret_cast<char*>(&metadata_shard_count_) -
    reinterpret_cast<char*>(&block_replication_factor_) + sizeof(metadata_shard_count_));
  // @@protoc_insertion_point(copy_constructor:CalvinFSConfig)
}

void CalvinFSConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&block_replication_factor_, 0, reinterpret_cast<char*>(&metadata_shard_count_) -
    reinterpret_cast<char*>(&block_replication_factor_) + sizeof(metadata_shard_count_));
}

CalvinFSConfig::~CalvinFSConfig() {
  // @@protoc_insertion_point(destructor:CalvinFSConfig)
  SharedDtor();
}

void CalvinFSConfig::SharedDtor() {
}

void CalvinFSConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalvinFSConfig::descriptor() {
  protobuf_calvinfs_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_calvinfs_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalvinFSConfig& CalvinFSConfig::default_instance() {
  protobuf_calvinfs_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

CalvinFSConfig* CalvinFSConfig::New(::google::protobuf::Arena* arena) const {
  CalvinFSConfig* n = new CalvinFSConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalvinFSConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:CalvinFSConfig)
  replicas_.Clear();
  bluckets_.Clear();
  metadata_shards_.Clear();
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&block_replication_factor_, 0, reinterpret_cast<char*>(&metadata_shard_count_) -
      reinterpret_cast<char*>(&block_replication_factor_) + sizeof(metadata_shard_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalvinFSConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CalvinFSConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 block_replication_factor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_block_replication_factor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &block_replication_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 metadata_replication_factor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_metadata_replication_factor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &metadata_replication_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 blucket_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_blucket_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &blucket_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 metadata_shard_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_metadata_shard_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &metadata_shard_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_replicas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CalvinFSConfig.MapEntry bluckets = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bluckets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_metadata_shards()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CalvinFSConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CalvinFSConfig)
  return false;
#undef DO_
}

void CalvinFSConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CalvinFSConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 block_replication_factor = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->block_replication_factor(), output);
  }

  // optional uint64 metadata_replication_factor = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->metadata_replication_factor(), output);
  }

  // optional uint64 blucket_count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->blucket_count(), output);
  }

  // optional uint64 metadata_shard_count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->metadata_shard_count(), output);
  }

  // repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
  for (unsigned int i = 0, n = this->replicas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->replicas(i), output);
  }

  // repeated .CalvinFSConfig.MapEntry bluckets = 21;
  for (unsigned int i = 0, n = this->bluckets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->bluckets(i), output);
  }

  // repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
  for (unsigned int i = 0, n = this->metadata_shards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->metadata_shards(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CalvinFSConfig)
}

::google::protobuf::uint8* CalvinFSConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CalvinFSConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 block_replication_factor = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->block_replication_factor(), target);
  }

  // optional uint64 metadata_replication_factor = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->metadata_replication_factor(), target);
  }

  // optional uint64 blucket_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->blucket_count(), target);
  }

  // optional uint64 metadata_shard_count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->metadata_shard_count(), target);
  }

  // repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
  for (unsigned int i = 0, n = this->replicas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->replicas(i), deterministic, target);
  }

  // repeated .CalvinFSConfig.MapEntry bluckets = 21;
  for (unsigned int i = 0, n = this->bluckets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, this->bluckets(i), deterministic, target);
  }

  // repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
  for (unsigned int i = 0, n = this->metadata_shards_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        31, this->metadata_shards(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CalvinFSConfig)
  return target;
}

size_t CalvinFSConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CalvinFSConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
  {
    unsigned int count = this->replicas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->replicas(i));
    }
  }

  // repeated .CalvinFSConfig.MapEntry bluckets = 21;
  {
    unsigned int count = this->bluckets_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bluckets(i));
    }
  }

  // repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
  {
    unsigned int count = this->metadata_shards_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metadata_shards(i));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 block_replication_factor = 1;
    if (has_block_replication_factor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->block_replication_factor());
    }

    // optional uint64 metadata_replication_factor = 2;
    if (has_metadata_replication_factor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->metadata_replication_factor());
    }

    // optional uint64 blucket_count = 3;
    if (has_blucket_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->blucket_count());
    }

    // optional uint64 metadata_shard_count = 4;
    if (has_metadata_shard_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->metadata_shard_count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalvinFSConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CalvinFSConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const CalvinFSConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalvinFSConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CalvinFSConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CalvinFSConfig)
    MergeFrom(*source);
  }
}

void CalvinFSConfig::MergeFrom(const CalvinFSConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CalvinFSConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  replicas_.MergeFrom(from.replicas_);
  bluckets_.MergeFrom(from.bluckets_);
  metadata_shards_.MergeFrom(from.metadata_shards_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      block_replication_factor_ = from.block_replication_factor_;
    }
    if (cached_has_bits & 0x00000002u) {
      metadata_replication_factor_ = from.metadata_replication_factor_;
    }
    if (cached_has_bits & 0x00000004u) {
      blucket_count_ = from.blucket_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      metadata_shard_count_ = from.metadata_shard_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalvinFSConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CalvinFSConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalvinFSConfig::CopyFrom(const CalvinFSConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CalvinFSConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalvinFSConfig::IsInitialized() const {
  return true;
}

void CalvinFSConfig::Swap(CalvinFSConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalvinFSConfig::InternalSwap(CalvinFSConfig* other) {
  replicas_.InternalSwap(&other->replicas_);
  bluckets_.InternalSwap(&other->bluckets_);
  metadata_shards_.InternalSwap(&other->metadata_shards_);
  std::swap(block_replication_factor_, other->block_replication_factor_);
  std::swap(metadata_replication_factor_, other->metadata_replication_factor_);
  std::swap(blucket_count_, other->blucket_count_);
  std::swap(metadata_shard_count_, other->metadata_shard_count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalvinFSConfig::GetMetadata() const {
  protobuf_calvinfs_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_calvinfs_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CalvinFSConfig

// optional uint64 block_replication_factor = 1;
bool CalvinFSConfig::has_block_replication_factor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CalvinFSConfig::set_has_block_replication_factor() {
  _has_bits_[0] |= 0x00000001u;
}
void CalvinFSConfig::clear_has_block_replication_factor() {
  _has_bits_[0] &= ~0x00000001u;
}
void CalvinFSConfig::clear_block_replication_factor() {
  block_replication_factor_ = GOOGLE_ULONGLONG(0);
  clear_has_block_replication_factor();
}
::google::protobuf::uint64 CalvinFSConfig::block_replication_factor() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.block_replication_factor)
  return block_replication_factor_;
}
void CalvinFSConfig::set_block_replication_factor(::google::protobuf::uint64 value) {
  set_has_block_replication_factor();
  block_replication_factor_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.block_replication_factor)
}

// optional uint64 metadata_replication_factor = 2;
bool CalvinFSConfig::has_metadata_replication_factor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CalvinFSConfig::set_has_metadata_replication_factor() {
  _has_bits_[0] |= 0x00000002u;
}
void CalvinFSConfig::clear_has_metadata_replication_factor() {
  _has_bits_[0] &= ~0x00000002u;
}
void CalvinFSConfig::clear_metadata_replication_factor() {
  metadata_replication_factor_ = GOOGLE_ULONGLONG(0);
  clear_has_metadata_replication_factor();
}
::google::protobuf::uint64 CalvinFSConfig::metadata_replication_factor() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.metadata_replication_factor)
  return metadata_replication_factor_;
}
void CalvinFSConfig::set_metadata_replication_factor(::google::protobuf::uint64 value) {
  set_has_metadata_replication_factor();
  metadata_replication_factor_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.metadata_replication_factor)
}

// optional uint64 blucket_count = 3;
bool CalvinFSConfig::has_blucket_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CalvinFSConfig::set_has_blucket_count() {
  _has_bits_[0] |= 0x00000004u;
}
void CalvinFSConfig::clear_has_blucket_count() {
  _has_bits_[0] &= ~0x00000004u;
}
void CalvinFSConfig::clear_blucket_count() {
  blucket_count_ = GOOGLE_ULONGLONG(0);
  clear_has_blucket_count();
}
::google::protobuf::uint64 CalvinFSConfig::blucket_count() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.blucket_count)
  return blucket_count_;
}
void CalvinFSConfig::set_blucket_count(::google::protobuf::uint64 value) {
  set_has_blucket_count();
  blucket_count_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.blucket_count)
}

// optional uint64 metadata_shard_count = 4;
bool CalvinFSConfig::has_metadata_shard_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CalvinFSConfig::set_has_metadata_shard_count() {
  _has_bits_[0] |= 0x00000008u;
}
void CalvinFSConfig::clear_has_metadata_shard_count() {
  _has_bits_[0] &= ~0x00000008u;
}
void CalvinFSConfig::clear_metadata_shard_count() {
  metadata_shard_count_ = GOOGLE_ULONGLONG(0);
  clear_has_metadata_shard_count();
}
::google::protobuf::uint64 CalvinFSConfig::metadata_shard_count() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.metadata_shard_count)
  return metadata_shard_count_;
}
void CalvinFSConfig::set_metadata_shard_count(::google::protobuf::uint64 value) {
  set_has_metadata_shard_count();
  metadata_shard_count_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.metadata_shard_count)
}

// repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
int CalvinFSConfig::replicas_size() const {
  return replicas_.size();
}
void CalvinFSConfig::clear_replicas() {
  replicas_.Clear();
}
const ::CalvinFSConfig_ReplicaParticipant& CalvinFSConfig::replicas(int index) const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.replicas)
  return replicas_.Get(index);
}
::CalvinFSConfig_ReplicaParticipant* CalvinFSConfig::mutable_replicas(int index) {
  // @@protoc_insertion_point(field_mutable:CalvinFSConfig.replicas)
  return replicas_.Mutable(index);
}
::CalvinFSConfig_ReplicaParticipant* CalvinFSConfig::add_replicas() {
  // @@protoc_insertion_point(field_add:CalvinFSConfig.replicas)
  return replicas_.Add();
}
::google::protobuf::RepeatedPtrField< ::CalvinFSConfig_ReplicaParticipant >*
CalvinFSConfig::mutable_replicas() {
  // @@protoc_insertion_point(field_mutable_list:CalvinFSConfig.replicas)
  return &replicas_;
}
const ::google::protobuf::RepeatedPtrField< ::CalvinFSConfig_ReplicaParticipant >&
CalvinFSConfig::replicas() const {
  // @@protoc_insertion_point(field_list:CalvinFSConfig.replicas)
  return replicas_;
}

// repeated .CalvinFSConfig.MapEntry bluckets = 21;
int CalvinFSConfig::bluckets_size() const {
  return bluckets_.size();
}
void CalvinFSConfig::clear_bluckets() {
  bluckets_.Clear();
}
const ::CalvinFSConfig_MapEntry& CalvinFSConfig::bluckets(int index) const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.bluckets)
  return bluckets_.Get(index);
}
::CalvinFSConfig_MapEntry* CalvinFSConfig::mutable_bluckets(int index) {
  // @@protoc_insertion_point(field_mutable:CalvinFSConfig.bluckets)
  return bluckets_.Mutable(index);
}
::CalvinFSConfig_MapEntry* CalvinFSConfig::add_bluckets() {
  // @@protoc_insertion_point(field_add:CalvinFSConfig.bluckets)
  return bluckets_.Add();
}
::google::protobuf::RepeatedPtrField< ::CalvinFSConfig_MapEntry >*
CalvinFSConfig::mutable_bluckets() {
  // @@protoc_insertion_point(field_mutable_list:CalvinFSConfig.bluckets)
  return &bluckets_;
}
const ::google::protobuf::RepeatedPtrField< ::CalvinFSConfig_MapEntry >&
CalvinFSConfig::bluckets() const {
  // @@protoc_insertion_point(field_list:CalvinFSConfig.bluckets)
  return bluckets_;
}

// repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
int CalvinFSConfig::metadata_shards_size() const {
  return metadata_shards_.size();
}
void CalvinFSConfig::clear_metadata_shards() {
  metadata_shards_.Clear();
}
const ::CalvinFSConfig_MapEntry& CalvinFSConfig::metadata_shards(int index) const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.metadata_shards)
  return metadata_shards_.Get(index);
}
::CalvinFSConfig_MapEntry* CalvinFSConfig::mutable_metadata_shards(int index) {
  // @@protoc_insertion_point(field_mutable:CalvinFSConfig.metadata_shards)
  return metadata_shards_.Mutable(index);
}
::CalvinFSConfig_MapEntry* CalvinFSConfig::add_metadata_shards() {
  // @@protoc_insertion_point(field_add:CalvinFSConfig.metadata_shards)
  return metadata_shards_.Add();
}
::google::protobuf::RepeatedPtrField< ::CalvinFSConfig_MapEntry >*
CalvinFSConfig::mutable_metadata_shards() {
  // @@protoc_insertion_point(field_mutable_list:CalvinFSConfig.metadata_shards)
  return &metadata_shards_;
}
const ::google::protobuf::RepeatedPtrField< ::CalvinFSConfig_MapEntry >&
CalvinFSConfig::metadata_shards() const {
  // @@protoc_insertion_point(field_list:CalvinFSConfig.metadata_shards)
  return metadata_shards_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapProto_Entry::kKeyFieldNumber;
const int MapProto_Entry::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapProto_Entry::MapProto_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_calvinfs_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MapProto.Entry)
}
MapProto_Entry::MapProto_Entry(const MapProto_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:MapProto.Entry)
}

void MapProto_Entry::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MapProto_Entry::~MapProto_Entry() {
  // @@protoc_insertion_point(destructor:MapProto.Entry)
  SharedDtor();
}

void MapProto_Entry::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MapProto_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapProto_Entry::descriptor() {
  protobuf_calvinfs_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_calvinfs_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MapProto_Entry& MapProto_Entry::default_instance() {
  protobuf_calvinfs_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

MapProto_Entry* MapProto_Entry::New(::google::protobuf::Arena* arena) const {
  MapProto_Entry* n = new MapProto_Entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MapProto_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:MapProto.Entry)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (has_value()) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MapProto_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MapProto.Entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MapProto.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MapProto.Entry)
  return false;
#undef DO_
}

void MapProto_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MapProto.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MapProto.Entry)
}

::google::protobuf::uint8* MapProto_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MapProto.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MapProto.Entry)
  return target;
}

size_t MapProto_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MapProto.Entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapProto_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MapProto.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const MapProto_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MapProto_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MapProto.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MapProto.Entry)
    MergeFrom(*source);
  }
}

void MapProto_Entry::MergeFrom(const MapProto_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MapProto.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void MapProto_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MapProto.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapProto_Entry::CopyFrom(const MapProto_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MapProto.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapProto_Entry::IsInitialized() const {
  return true;
}

void MapProto_Entry::Swap(MapProto_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapProto_Entry::InternalSwap(MapProto_Entry* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MapProto_Entry::GetMetadata() const {
  protobuf_calvinfs_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_calvinfs_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MapProto_Entry

// optional bytes key = 1;
bool MapProto_Entry::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MapProto_Entry::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void MapProto_Entry::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void MapProto_Entry::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& MapProto_Entry::key() const {
  // @@protoc_insertion_point(field_get:MapProto.Entry.key)
  return key_.GetNoArena();
}
void MapProto_Entry::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MapProto.Entry.key)
}
#if LANG_CXX11
void MapProto_Entry::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MapProto.Entry.key)
}
#endif
void MapProto_Entry::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MapProto.Entry.key)
}
void MapProto_Entry::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MapProto.Entry.key)
}
::std::string* MapProto_Entry::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:MapProto.Entry.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MapProto_Entry::release_key() {
  // @@protoc_insertion_point(field_release:MapProto.Entry.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MapProto_Entry::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:MapProto.Entry.key)
}

// optional bytes value = 2;
bool MapProto_Entry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MapProto_Entry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void MapProto_Entry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void MapProto_Entry::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& MapProto_Entry::value() const {
  // @@protoc_insertion_point(field_get:MapProto.Entry.value)
  return value_.GetNoArena();
}
void MapProto_Entry::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MapProto.Entry.value)
}
#if LANG_CXX11
void MapProto_Entry::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MapProto.Entry.value)
}
#endif
void MapProto_Entry::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MapProto.Entry.value)
}
void MapProto_Entry::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MapProto.Entry.value)
}
::std::string* MapProto_Entry::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:MapProto.Entry.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MapProto_Entry::release_value() {
  // @@protoc_insertion_point(field_release:MapProto.Entry.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MapProto_Entry::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:MapProto.Entry.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapProto::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapProto::MapProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_calvinfs_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MapProto)
}
MapProto::MapProto(const MapProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MapProto)
}

void MapProto::SharedCtor() {
  _cached_size_ = 0;
}

MapProto::~MapProto() {
  // @@protoc_insertion_point(destructor:MapProto)
  SharedDtor();
}

void MapProto::SharedDtor() {
}

void MapProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapProto::descriptor() {
  protobuf_calvinfs_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_calvinfs_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MapProto& MapProto::default_instance() {
  protobuf_calvinfs_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

MapProto* MapProto::New(::google::protobuf::Arena* arena) const {
  MapProto* n = new MapProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MapProto::Clear() {
// @@protoc_insertion_point(message_clear_start:MapProto)
  entries_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MapProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MapProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MapProto.Entry entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MapProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MapProto)
  return false;
#undef DO_
}

void MapProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MapProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MapProto.Entry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MapProto)
}

::google::protobuf::uint8* MapProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MapProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MapProto.Entry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entries(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MapProto)
  return target;
}

size_t MapProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MapProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MapProto.Entry entries = 1;
  {
    unsigned int count = this->entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entries(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MapProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MapProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MapProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MapProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MapProto)
    MergeFrom(*source);
  }
}

void MapProto::MergeFrom(const MapProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MapProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void MapProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MapProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapProto::CopyFrom(const MapProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MapProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapProto::IsInitialized() const {
  return true;
}

void MapProto::Swap(MapProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapProto::InternalSwap(MapProto* other) {
  entries_.InternalSwap(&other->entries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MapProto::GetMetadata() const {
  protobuf_calvinfs_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_calvinfs_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MapProto

// repeated .MapProto.Entry entries = 1;
int MapProto::entries_size() const {
  return entries_.size();
}
void MapProto::clear_entries() {
  entries_.Clear();
}
const ::MapProto_Entry& MapProto::entries(int index) const {
  // @@protoc_insertion_point(field_get:MapProto.entries)
  return entries_.Get(index);
}
::MapProto_Entry* MapProto::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:MapProto.entries)
  return entries_.Mutable(index);
}
::MapProto_Entry* MapProto::add_entries() {
  // @@protoc_insertion_point(field_add:MapProto.entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::MapProto_Entry >*
MapProto::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:MapProto.entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::MapProto_Entry >&
MapProto::entries() const {
  // @@protoc_insertion_point(field_list:MapProto.entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
