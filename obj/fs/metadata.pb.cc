// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metadata.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "metadata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class PermissionsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Permissions> {
} _Permissions_default_instance_;
class FilePartDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FilePart> {
} _FilePart_default_instance_;
class MetadataEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataEntry> {
} _MetadataEntry_default_instance_;
class MetadataAction_CreateFileInputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_CreateFileInput> {
} _MetadataAction_CreateFileInput_default_instance_;
class MetadataAction_CreateFileOutputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_CreateFileOutput> {
} _MetadataAction_CreateFileOutput_default_instance_;
class MetadataAction_EraseInputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_EraseInput> {
} _MetadataAction_EraseInput_default_instance_;
class MetadataAction_EraseOutputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_EraseOutput> {
} _MetadataAction_EraseOutput_default_instance_;
class MetadataAction_CopyInputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_CopyInput> {
} _MetadataAction_CopyInput_default_instance_;
class MetadataAction_CopyOutputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_CopyOutput> {
} _MetadataAction_CopyOutput_default_instance_;
class MetadataAction_RenameInputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_RenameInput> {
} _MetadataAction_RenameInput_default_instance_;
class MetadataAction_RenameOutputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_RenameOutput> {
} _MetadataAction_RenameOutput_default_instance_;
class MetadataAction_LookupInputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_LookupInput> {
} _MetadataAction_LookupInput_default_instance_;
class MetadataAction_LookupOutputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_LookupOutput> {
} _MetadataAction_LookupOutput_default_instance_;
class MetadataAction_ResizeInputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_ResizeInput> {
} _MetadataAction_ResizeInput_default_instance_;
class MetadataAction_ResizeOutputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_ResizeOutput> {
} _MetadataAction_ResizeOutput_default_instance_;
class MetadataAction_WriteInputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_WriteInput> {
} _MetadataAction_WriteInput_default_instance_;
class MetadataAction_WriteOutputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_WriteOutput> {
} _MetadataAction_WriteOutput_default_instance_;
class MetadataAction_AppendInputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_AppendInput> {
} _MetadataAction_AppendInput_default_instance_;
class MetadataAction_AppendOutputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_AppendOutput> {
} _MetadataAction_AppendOutput_default_instance_;
class MetadataAction_ChangePermissionsInputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_ChangePermissionsInput> {
} _MetadataAction_ChangePermissionsInput_default_instance_;
class MetadataAction_ChangePermissionsOutputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_ChangePermissionsOutput> {
} _MetadataAction_ChangePermissionsOutput_default_instance_;
class MetadataActionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction> {
} _MetadataAction_default_instance_;

namespace protobuf_metadata_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[22];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Permissions, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Permissions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Permissions, owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Permissions, group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Permissions, mode_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilePart, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilePart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilePart, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilePart, block_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilePart, block_offset_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataEntry, locked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataEntry, permissions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataEntry, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataEntry, file_parts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataEntry, dir_contents_),
  1,
  0,
  2,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CreateFileInput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CreateFileInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CreateFileInput, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CreateFileInput, permissions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CreateFileInput, type_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CreateFileOutput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CreateFileOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CreateFileOutput, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CreateFileOutput, errors_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_EraseInput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_EraseInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_EraseInput, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_EraseInput, permissions_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_EraseOutput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_EraseOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_EraseOutput, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_EraseOutput, errors_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CopyInput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CopyInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CopyInput, from_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CopyInput, to_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CopyInput, permissions_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CopyOutput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CopyOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CopyOutput, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_CopyOutput, errors_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_RenameInput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_RenameInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_RenameInput, from_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_RenameInput, to_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_RenameInput, permissions_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_RenameOutput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_RenameOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_RenameOutput, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_RenameOutput, errors_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_LookupInput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_LookupInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_LookupInput, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_LookupInput, permissions_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_LookupOutput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_LookupOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_LookupOutput, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_LookupOutput, errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_LookupOutput, entry_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ResizeInput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ResizeInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ResizeInput, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ResizeInput, permissions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ResizeInput, size_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ResizeOutput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ResizeOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ResizeOutput, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ResizeOutput, errors_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_WriteInput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_WriteInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_WriteInput, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_WriteInput, permissions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_WriteInput, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_WriteInput, data_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_WriteOutput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_WriteOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_WriteOutput, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_WriteOutput, errors_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_AppendInput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_AppendInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_AppendInput, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_AppendInput, permissions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_AppendInput, data_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_AppendOutput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_AppendOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_AppendOutput, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_AppendOutput, errors_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ChangePermissionsInput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ChangePermissionsInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ChangePermissionsInput, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ChangePermissionsInput, permissions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ChangePermissionsInput, new_permissions_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ChangePermissionsOutput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ChangePermissionsOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ChangePermissionsOutput, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction_ChangePermissionsOutput, errors_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetadataAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(Permissions)},
  { 11, 19, sizeof(FilePart)},
  { 22, 32, sizeof(MetadataEntry)},
  { 37, 45, sizeof(MetadataAction_CreateFileInput)},
  { 48, 55, sizeof(MetadataAction_CreateFileOutput)},
  { 57, 64, sizeof(MetadataAction_EraseInput)},
  { 66, 73, sizeof(MetadataAction_EraseOutput)},
  { 75, 83, sizeof(MetadataAction_CopyInput)},
  { 86, 93, sizeof(MetadataAction_CopyOutput)},
  { 95, 103, sizeof(MetadataAction_RenameInput)},
  { 106, 113, sizeof(MetadataAction_RenameOutput)},
  { 115, 122, sizeof(MetadataAction_LookupInput)},
  { 124, 132, sizeof(MetadataAction_LookupOutput)},
  { 135, 143, sizeof(MetadataAction_ResizeInput)},
  { 146, 153, sizeof(MetadataAction_ResizeOutput)},
  { 155, 164, sizeof(MetadataAction_WriteInput)},
  { 168, 175, sizeof(MetadataAction_WriteOutput)},
  { 177, 185, sizeof(MetadataAction_AppendInput)},
  { 188, 195, sizeof(MetadataAction_AppendOutput)},
  { 197, 205, sizeof(MetadataAction_ChangePermissionsInput)},
  { 208, 215, sizeof(MetadataAction_ChangePermissionsOutput)},
  { 217, 222, sizeof(MetadataAction)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Permissions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FilePart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_CreateFileInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_CreateFileOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_EraseInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_EraseOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_CopyInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_CopyOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_RenameInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_RenameOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_LookupInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_LookupOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_ResizeInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_ResizeOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_WriteInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_WriteOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_AppendInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_AppendOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_ChangePermissionsInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_ChangePermissionsOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MetadataAction_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "metadata.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 22);
}

}  // namespace

void TableStruct::Shutdown() {
  _Permissions_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  Permissions::_default_mode_.Shutdown();
  _FilePart_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _MetadataEntry_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _MetadataAction_CreateFileInput_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _MetadataAction_CreateFileOutput_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _MetadataAction_EraseInput_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _MetadataAction_EraseOutput_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _MetadataAction_CopyInput_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _MetadataAction_CopyOutput_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _MetadataAction_RenameInput_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _MetadataAction_RenameOutput_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _MetadataAction_LookupInput_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _MetadataAction_LookupOutput_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _MetadataAction_ResizeInput_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _MetadataAction_ResizeOutput_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _MetadataAction_WriteInput_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _MetadataAction_WriteOutput_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _MetadataAction_AppendInput_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _MetadataAction_AppendOutput_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _MetadataAction_ChangePermissionsInput_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _MetadataAction_ChangePermissionsOutput_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _MetadataAction_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  Permissions::_default_mode_.DefaultConstruct();
  *Permissions::_default_mode_.get_mutable() = ::std::string("777", 3);
  _Permissions_default_instance_.DefaultConstruct();
  _FilePart_default_instance_.DefaultConstruct();
  _MetadataEntry_default_instance_.DefaultConstruct();
  _MetadataAction_CreateFileInput_default_instance_.DefaultConstruct();
  _MetadataAction_CreateFileOutput_default_instance_.DefaultConstruct();
  _MetadataAction_EraseInput_default_instance_.DefaultConstruct();
  _MetadataAction_EraseOutput_default_instance_.DefaultConstruct();
  _MetadataAction_CopyInput_default_instance_.DefaultConstruct();
  _MetadataAction_CopyOutput_default_instance_.DefaultConstruct();
  _MetadataAction_RenameInput_default_instance_.DefaultConstruct();
  _MetadataAction_RenameOutput_default_instance_.DefaultConstruct();
  _MetadataAction_LookupInput_default_instance_.DefaultConstruct();
  _MetadataAction_LookupOutput_default_instance_.DefaultConstruct();
  _MetadataAction_ResizeInput_default_instance_.DefaultConstruct();
  _MetadataAction_ResizeOutput_default_instance_.DefaultConstruct();
  _MetadataAction_WriteInput_default_instance_.DefaultConstruct();
  _MetadataAction_WriteOutput_default_instance_.DefaultConstruct();
  _MetadataAction_AppendInput_default_instance_.DefaultConstruct();
  _MetadataAction_AppendOutput_default_instance_.DefaultConstruct();
  _MetadataAction_ChangePermissionsInput_default_instance_.DefaultConstruct();
  _MetadataAction_ChangePermissionsOutput_default_instance_.DefaultConstruct();
  _MetadataAction_default_instance_.DefaultConstruct();
  _MetadataEntry_default_instance_.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
  _MetadataAction_CreateFileInput_default_instance_.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
  _MetadataAction_EraseInput_default_instance_.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
  _MetadataAction_CopyInput_default_instance_.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
  _MetadataAction_RenameInput_default_instance_.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
  _MetadataAction_LookupInput_default_instance_.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
  _MetadataAction_LookupOutput_default_instance_.get_mutable()->entry_ = const_cast< ::MetadataEntry*>(
      ::MetadataEntry::internal_default_instance());
  _MetadataAction_ResizeInput_default_instance_.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
  _MetadataAction_WriteInput_default_instance_.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
  _MetadataAction_AppendInput_default_instance_.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
  _MetadataAction_ChangePermissionsInput_default_instance_.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
  _MetadataAction_ChangePermissionsInput_default_instance_.get_mutable()->new_permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016metadata.proto\"D\n\013Permissions\022\020\n\005owner"
      "\030\002 \001(\004:\0010\022\020\n\005group\030\003 \001(\004:\0010\022\021\n\004mode\030\004 \001("
      "\t:\003777\"H\n\010FilePart\022\016\n\006length\030\001 \002(\004\022\023\n\010bl"
      "ock_id\030\002 \001(\004:\0010\022\027\n\014block_offset\030\003 \001(\004:\0010"
      "\"\235\001\n\rMetadataEntry\022\025\n\006locked\030\001 \001(\010:\005fals"
      "e\022!\n\013permissions\030\002 \001(\0132\014.Permissions\022\035\n\004"
      "type\030\005 \002(\0162\t.FileType:\004DATA\022\035\n\nfile_part"
      "s\030\006 \003(\0132\t.FilePart\022\024\n\014dir_contents\030\007 \003(\t"
      "\"\374\r\n\016MetadataAction\032a\n\017CreateFileInput\022\014"
      "\n\004path\030\001 \002(\t\022!\n\013permissions\030\002 \001(\0132\014.Perm"
      "issions\022\035\n\004type\030\003 \002(\0162\t.FileType:\004DATA\032P"
      "\n\020CreateFileOutput\022\025\n\007success\030\001 \001(\010:\004tru"
      "e\022%\n\006errors\030\002 \003(\0162\025.MetadataAction.Error"
      "\032=\n\nEraseInput\022\014\n\004path\030\001 \002(\t\022!\n\013permissi"
      "ons\030\002 \001(\0132\014.Permissions\032K\n\013EraseOutput\022\025"
      "\n\007success\030\001 \001(\010:\004true\022%\n\006errors\030\002 \003(\0162\025."
      "MetadataAction.Error\032R\n\tCopyInput\022\021\n\tfro"
      "m_path\030\001 \002(\t\022\017\n\007to_path\030\002 \002(\t\022!\n\013permiss"
      "ions\030\003 \001(\0132\014.Permissions\032J\n\nCopyOutput\022\025"
      "\n\007success\030\001 \001(\010:\004true\022%\n\006errors\030\002 \003(\0162\025."
      "MetadataAction.Error\032T\n\013RenameInput\022\021\n\tf"
      "rom_path\030\001 \002(\t\022\017\n\007to_path\030\002 \002(\t\022!\n\013permi"
      "ssions\030\003 \001(\0132\014.Permissions\032L\n\014RenameOutp"
      "ut\022\025\n\007success\030\001 \001(\010:\004true\022%\n\006errors\030\002 \003("
      "\0162\025.MetadataAction.Error\032>\n\013LookupInput\022"
      "\014\n\004path\030\001 \002(\t\022!\n\013permissions\030\002 \001(\0132\014.Per"
      "missions\032k\n\014LookupOutput\022\025\n\007success\030\001 \001("
      "\010:\004true\022%\n\006errors\030\002 \003(\0162\025.MetadataAction"
      ".Error\022\035\n\005entry\030\003 \001(\0132\016.MetadataEntry\032L\n"
      "\013ResizeInput\022\014\n\004path\030\001 \002(\t\022!\n\013permission"
      "s\030\002 \001(\0132\014.Permissions\022\014\n\004size\030\003 \002(\004\032L\n\014R"
      "esizeOutput\022\025\n\007success\030\001 \001(\010:\004true\022%\n\006er"
      "rors\030\002 \003(\0162\025.MetadataAction.Error\032f\n\nWri"
      "teInput\022\014\n\004path\030\001 \002(\t\022!\n\013permissions\030\002 \001"
      "(\0132\014.Permissions\022\016\n\006offset\030\003 \002(\004\022\027\n\004data"
      "\030\004 \003(\0132\t.FilePart\032K\n\013WriteOutput\022\025\n\007succ"
      "ess\030\001 \001(\010:\004true\022%\n\006errors\030\002 \003(\0162\025.Metada"
      "taAction.Error\032W\n\013AppendInput\022\014\n\004path\030\001 "
      "\002(\t\022!\n\013permissions\030\002 \001(\0132\014.Permissions\022\027"
      "\n\004data\030\003 \003(\0132\t.FilePart\032L\n\014AppendOutput\022"
      "\025\n\007success\030\001 \001(\010:\004true\022%\n\006errors\030\002 \003(\0162\025"
      ".MetadataAction.Error\032p\n\026ChangePermissio"
      "nsInput\022\014\n\004path\030\001 \002(\t\022!\n\013permissions\030\002 \001"
      "(\0132\014.Permissions\022%\n\017new_permissions\030\003 \002("
      "\0132\014.Permissions\032W\n\027ChangePermissionsOutp"
      "ut\022\025\n\007success\030\001 \001(\010:\004true\022%\n\006errors\030\002 \003("
      "\0162\025.MetadataAction.Error\"\177\n\004Type\022\017\n\013CREA"
      "TE_FILE\020\000\022\t\n\005ERASE\020\001\022\010\n\004COPY\020\002\022\n\n\006RENAME"
      "\020\003\022\n\n\006LOOKUP\020\004\022\n\n\006RESIZE\020\005\022\t\n\005WRITE\020\006\022\n\n"
      "\006APPEND\020\007\022\026\n\022CHANGE_PERMISSIONS\020\010\"t\n\005Err"
      "or\022\024\n\020FileDoesNotExist\020\000\022\025\n\021FileAlreadyE"
      "xists\020\001\022\021\n\rWrongFileType\020\002\022\025\n\021DirectoryN"
      "otEmpty\020\003\022\024\n\020PermissionDenied\020\004*\035\n\010FileT"
      "ype\022\010\n\004DATA\020\000\022\007\n\003DIR\020\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2142);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metadata.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_metadata_2eproto

const ::google::protobuf::EnumDescriptor* MetadataAction_Type_descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_enum_descriptors[0];
}
bool MetadataAction_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MetadataAction_Type MetadataAction::CREATE_FILE;
const MetadataAction_Type MetadataAction::ERASE;
const MetadataAction_Type MetadataAction::COPY;
const MetadataAction_Type MetadataAction::RENAME;
const MetadataAction_Type MetadataAction::LOOKUP;
const MetadataAction_Type MetadataAction::RESIZE;
const MetadataAction_Type MetadataAction::WRITE;
const MetadataAction_Type MetadataAction::APPEND;
const MetadataAction_Type MetadataAction::CHANGE_PERMISSIONS;
const MetadataAction_Type MetadataAction::Type_MIN;
const MetadataAction_Type MetadataAction::Type_MAX;
const int MetadataAction::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MetadataAction_Error_descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_enum_descriptors[1];
}
bool MetadataAction_Error_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MetadataAction_Error MetadataAction::FileDoesNotExist;
const MetadataAction_Error MetadataAction::FileAlreadyExists;
const MetadataAction_Error MetadataAction::WrongFileType;
const MetadataAction_Error MetadataAction::DirectoryNotEmpty;
const MetadataAction_Error MetadataAction::PermissionDenied;
const MetadataAction_Error MetadataAction::Error_MIN;
const MetadataAction_Error MetadataAction::Error_MAX;
const int MetadataAction::Error_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FileType_descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_enum_descriptors[2];
}
bool FileType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

::google::protobuf::internal::ExplicitlyConstructed< ::std::string> Permissions::_default_mode_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Permissions::kOwnerFieldNumber;
const int Permissions::kGroupFieldNumber;
const int Permissions::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Permissions::Permissions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Permissions)
}
Permissions::Permissions(const Permissions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mode_.UnsafeSetDefault(&Permissions::_default_mode_.get());
  if (from.has_mode()) {
    mode_.AssignWithDefault(&Permissions::_default_mode_.get(), from.mode_);
  }
  ::memcpy(&owner_, &from.owner_,
    reinterpret_cast<char*>(&group_) -
    reinterpret_cast<char*>(&owner_) + sizeof(group_));
  // @@protoc_insertion_point(copy_constructor:Permissions)
}

void Permissions::SharedCtor() {
  _cached_size_ = 0;
  mode_.UnsafeSetDefault(&Permissions::_default_mode_.get());
  ::memset(&owner_, 0, reinterpret_cast<char*>(&group_) -
    reinterpret_cast<char*>(&owner_) + sizeof(group_));
}

Permissions::~Permissions() {
  // @@protoc_insertion_point(destructor:Permissions)
  SharedDtor();
}

void Permissions::SharedDtor() {
  mode_.DestroyNoArena(&Permissions::_default_mode_.get());
}

void Permissions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Permissions::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Permissions& Permissions::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

Permissions* Permissions::New(::google::protobuf::Arena* arena) const {
  Permissions* n = new Permissions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Permissions::Clear() {
// @@protoc_insertion_point(message_clear_start:Permissions)
  if (has_mode()) {
    GOOGLE_DCHECK(!mode_.IsDefault(&Permissions::_default_mode_.get()));
    (*mode_.UnsafeRawStringPointer())->assign(*&Permissions::_default_mode_.get());
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&owner_, 0, reinterpret_cast<char*>(&group_) -
      reinterpret_cast<char*>(&owner_) + sizeof(group_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Permissions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Permissions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 owner = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_owner();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &owner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 group = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_group();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mode = 4 [default = "777"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mode().data(), this->mode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Permissions.mode");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Permissions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Permissions)
  return false;
#undef DO_
}

void Permissions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Permissions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 owner = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->owner(), output);
  }

  // optional uint64 group = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->group(), output);
  }

  // optional string mode = 4 [default = "777"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mode().data(), this->mode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Permissions.mode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Permissions)
}

::google::protobuf::uint8* Permissions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Permissions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 owner = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->owner(), target);
  }

  // optional uint64 group = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->group(), target);
  }

  // optional string mode = 4 [default = "777"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mode().data(), this->mode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Permissions.mode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Permissions)
  return target;
}

size_t Permissions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Permissions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string mode = 4 [default = "777"];
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mode());
    }

    // optional uint64 owner = 2 [default = 0];
    if (has_owner()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->owner());
    }

    // optional uint64 group = 3 [default = 0];
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->group());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Permissions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Permissions)
  GOOGLE_DCHECK_NE(&from, this);
  const Permissions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Permissions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Permissions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Permissions)
    MergeFrom(*source);
  }
}

void Permissions::MergeFrom(const Permissions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Permissions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_mode();
      mode_.AssignWithDefault(&Permissions::_default_mode_.get(), from.mode_);
    }
    if (cached_has_bits & 0x00000002u) {
      owner_ = from.owner_;
    }
    if (cached_has_bits & 0x00000004u) {
      group_ = from.group_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Permissions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Permissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Permissions::CopyFrom(const Permissions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Permissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Permissions::IsInitialized() const {
  return true;
}

void Permissions::Swap(Permissions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Permissions::InternalSwap(Permissions* other) {
  mode_.Swap(&other->mode_);
  std::swap(owner_, other->owner_);
  std::swap(group_, other->group_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Permissions::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Permissions

// optional uint64 owner = 2 [default = 0];
bool Permissions::has_owner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Permissions::set_has_owner() {
  _has_bits_[0] |= 0x00000002u;
}
void Permissions::clear_has_owner() {
  _has_bits_[0] &= ~0x00000002u;
}
void Permissions::clear_owner() {
  owner_ = GOOGLE_ULONGLONG(0);
  clear_has_owner();
}
::google::protobuf::uint64 Permissions::owner() const {
  // @@protoc_insertion_point(field_get:Permissions.owner)
  return owner_;
}
void Permissions::set_owner(::google::protobuf::uint64 value) {
  set_has_owner();
  owner_ = value;
  // @@protoc_insertion_point(field_set:Permissions.owner)
}

// optional uint64 group = 3 [default = 0];
bool Permissions::has_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Permissions::set_has_group() {
  _has_bits_[0] |= 0x00000004u;
}
void Permissions::clear_has_group() {
  _has_bits_[0] &= ~0x00000004u;
}
void Permissions::clear_group() {
  group_ = GOOGLE_ULONGLONG(0);
  clear_has_group();
}
::google::protobuf::uint64 Permissions::group() const {
  // @@protoc_insertion_point(field_get:Permissions.group)
  return group_;
}
void Permissions::set_group(::google::protobuf::uint64 value) {
  set_has_group();
  group_ = value;
  // @@protoc_insertion_point(field_set:Permissions.group)
}

// optional string mode = 4 [default = "777"];
bool Permissions::has_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Permissions::set_has_mode() {
  _has_bits_[0] |= 0x00000001u;
}
void Permissions::clear_has_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Permissions::clear_mode() {
  mode_.ClearToDefaultNoArena(&Permissions::_default_mode_.get());
  clear_has_mode();
}
const ::std::string& Permissions::mode() const {
  // @@protoc_insertion_point(field_get:Permissions.mode)
  return mode_.GetNoArena();
}
void Permissions::set_mode(const ::std::string& value) {
  set_has_mode();
  mode_.SetNoArena(&Permissions::_default_mode_.get(), value);
  // @@protoc_insertion_point(field_set:Permissions.mode)
}
#if LANG_CXX11
void Permissions::set_mode(::std::string&& value) {
  set_has_mode();
  mode_.SetNoArena(
    &Permissions::_default_mode_.get(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Permissions.mode)
}
#endif
void Permissions::set_mode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mode();
  mode_.SetNoArena(&Permissions::_default_mode_.get(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Permissions.mode)
}
void Permissions::set_mode(const char* value, size_t size) {
  set_has_mode();
  mode_.SetNoArena(&Permissions::_default_mode_.get(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Permissions.mode)
}
::std::string* Permissions::mutable_mode() {
  set_has_mode();
  // @@protoc_insertion_point(field_mutable:Permissions.mode)
  return mode_.MutableNoArena(&Permissions::_default_mode_.get());
}
::std::string* Permissions::release_mode() {
  // @@protoc_insertion_point(field_release:Permissions.mode)
  clear_has_mode();
  return mode_.ReleaseNoArena(&Permissions::_default_mode_.get());
}
void Permissions::set_allocated_mode(::std::string* mode) {
  if (mode != NULL) {
    set_has_mode();
  } else {
    clear_has_mode();
  }
  mode_.SetAllocatedNoArena(&Permissions::_default_mode_.get(), mode);
  // @@protoc_insertion_point(field_set_allocated:Permissions.mode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilePart::kLengthFieldNumber;
const int FilePart::kBlockIdFieldNumber;
const int FilePart::kBlockOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilePart::FilePart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FilePart)
}
FilePart::FilePart(const FilePart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&length_, &from.length_,
    reinterpret_cast<char*>(&block_offset_) -
    reinterpret_cast<char*>(&length_) + sizeof(block_offset_));
  // @@protoc_insertion_point(copy_constructor:FilePart)
}

void FilePart::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&length_, 0, reinterpret_cast<char*>(&block_offset_) -
    reinterpret_cast<char*>(&length_) + sizeof(block_offset_));
}

FilePart::~FilePart() {
  // @@protoc_insertion_point(destructor:FilePart)
  SharedDtor();
}

void FilePart::SharedDtor() {
}

void FilePart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilePart::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FilePart& FilePart::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

FilePart* FilePart::New(::google::protobuf::Arena* arena) const {
  FilePart* n = new FilePart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FilePart::Clear() {
// @@protoc_insertion_point(message_clear_start:FilePart)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&length_, 0, reinterpret_cast<char*>(&block_offset_) -
      reinterpret_cast<char*>(&length_) + sizeof(block_offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FilePart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FilePart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 length = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 block_id = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_block_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &block_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 block_offset = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_block_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &block_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FilePart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FilePart)
  return false;
#undef DO_
}

void FilePart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FilePart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 length = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->length(), output);
  }

  // optional uint64 block_id = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->block_id(), output);
  }

  // optional uint64 block_offset = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->block_offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FilePart)
}

::google::protobuf::uint8* FilePart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FilePart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 length = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->length(), target);
  }

  // optional uint64 block_id = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->block_id(), target);
  }

  // optional uint64 block_offset = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->block_offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FilePart)
  return target;
}

size_t FilePart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FilePart)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint64 length = 1;
  if (has_length()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->length());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional uint64 block_id = 2 [default = 0];
    if (has_block_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->block_id());
    }

    // optional uint64 block_offset = 3 [default = 0];
    if (has_block_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->block_offset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FilePart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FilePart)
  GOOGLE_DCHECK_NE(&from, this);
  const FilePart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FilePart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FilePart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FilePart)
    MergeFrom(*source);
  }
}

void FilePart::MergeFrom(const FilePart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FilePart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      length_ = from.length_;
    }
    if (cached_has_bits & 0x00000002u) {
      block_id_ = from.block_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      block_offset_ = from.block_offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FilePart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FilePart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilePart::CopyFrom(const FilePart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FilePart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilePart::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void FilePart::Swap(FilePart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilePart::InternalSwap(FilePart* other) {
  std::swap(length_, other->length_);
  std::swap(block_id_, other->block_id_);
  std::swap(block_offset_, other->block_offset_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FilePart::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FilePart

// required uint64 length = 1;
bool FilePart::has_length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FilePart::set_has_length() {
  _has_bits_[0] |= 0x00000001u;
}
void FilePart::clear_has_length() {
  _has_bits_[0] &= ~0x00000001u;
}
void FilePart::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
  clear_has_length();
}
::google::protobuf::uint64 FilePart::length() const {
  // @@protoc_insertion_point(field_get:FilePart.length)
  return length_;
}
void FilePart::set_length(::google::protobuf::uint64 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:FilePart.length)
}

// optional uint64 block_id = 2 [default = 0];
bool FilePart::has_block_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FilePart::set_has_block_id() {
  _has_bits_[0] |= 0x00000002u;
}
void FilePart::clear_has_block_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void FilePart::clear_block_id() {
  block_id_ = GOOGLE_ULONGLONG(0);
  clear_has_block_id();
}
::google::protobuf::uint64 FilePart::block_id() const {
  // @@protoc_insertion_point(field_get:FilePart.block_id)
  return block_id_;
}
void FilePart::set_block_id(::google::protobuf::uint64 value) {
  set_has_block_id();
  block_id_ = value;
  // @@protoc_insertion_point(field_set:FilePart.block_id)
}

// optional uint64 block_offset = 3 [default = 0];
bool FilePart::has_block_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FilePart::set_has_block_offset() {
  _has_bits_[0] |= 0x00000004u;
}
void FilePart::clear_has_block_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
void FilePart::clear_block_offset() {
  block_offset_ = GOOGLE_ULONGLONG(0);
  clear_has_block_offset();
}
::google::protobuf::uint64 FilePart::block_offset() const {
  // @@protoc_insertion_point(field_get:FilePart.block_offset)
  return block_offset_;
}
void FilePart::set_block_offset(::google::protobuf::uint64 value) {
  set_has_block_offset();
  block_offset_ = value;
  // @@protoc_insertion_point(field_set:FilePart.block_offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataEntry::kLockedFieldNumber;
const int MetadataEntry::kPermissionsFieldNumber;
const int MetadataEntry::kTypeFieldNumber;
const int MetadataEntry::kFilePartsFieldNumber;
const int MetadataEntry::kDirContentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataEntry::MetadataEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataEntry)
}
MetadataEntry::MetadataEntry(const MetadataEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      file_parts_(from.file_parts_),
      dir_contents_(from.dir_contents_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = NULL;
  }
  ::memcpy(&locked_, &from.locked_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&locked_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:MetadataEntry)
}

void MetadataEntry::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&permissions_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&permissions_) + sizeof(type_));
}

MetadataEntry::~MetadataEntry() {
  // @@protoc_insertion_point(destructor:MetadataEntry)
  SharedDtor();
}

void MetadataEntry::SharedDtor() {
  if (this != internal_default_instance()) {
    delete permissions_;
  }
}

void MetadataEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataEntry::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataEntry& MetadataEntry::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataEntry* MetadataEntry::New(::google::protobuf::Arena* arena) const {
  MetadataEntry* n = new MetadataEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataEntry)
  file_parts_.Clear();
  dir_contents_.Clear();
  if (has_permissions()) {
    GOOGLE_DCHECK(permissions_ != NULL);
    permissions_->::Permissions::Clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&locked_, 0, reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&locked_) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool locked = 1 [default = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_locked();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .FileType type = 5 [default = DATA];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::FileType_IsValid(value)) {
            set_type(static_cast< ::FileType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .FilePart file_parts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_file_parts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string dir_contents = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_dir_contents()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dir_contents(this->dir_contents_size() - 1).data(),
            this->dir_contents(this->dir_contents_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataEntry.dir_contents");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataEntry)
  return false;
#undef DO_
}

void MetadataEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool locked = 1 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->locked(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->permissions_, output);
  }

  // required .FileType type = 5 [default = DATA];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // repeated .FilePart file_parts = 6;
  for (unsigned int i = 0, n = this->file_parts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->file_parts(i), output);
  }

  // repeated string dir_contents = 7;
  for (int i = 0, n = this->dir_contents_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dir_contents(i).data(), this->dir_contents(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataEntry.dir_contents");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->dir_contents(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataEntry)
}

::google::protobuf::uint8* MetadataEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool locked = 1 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->locked(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->permissions_, deterministic, target);
  }

  // required .FileType type = 5 [default = DATA];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // repeated .FilePart file_parts = 6;
  for (unsigned int i = 0, n = this->file_parts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->file_parts(i), deterministic, target);
  }

  // repeated string dir_contents = 7;
  for (int i = 0, n = this->dir_contents_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dir_contents(i).data(), this->dir_contents(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataEntry.dir_contents");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->dir_contents(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataEntry)
  return target;
}

size_t MetadataEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .FileType type = 5 [default = DATA];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  // repeated .FilePart file_parts = 6;
  {
    unsigned int count = this->file_parts_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->file_parts(i));
    }
  }

  // repeated string dir_contents = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->dir_contents_size());
  for (int i = 0, n = this->dir_contents_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->dir_contents(i));
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .Permissions permissions = 2;
    if (has_permissions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->permissions_);
    }

    // optional bool locked = 1 [default = false];
    if (has_locked()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataEntry)
    MergeFrom(*source);
  }
}

void MetadataEntry::MergeFrom(const MetadataEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  file_parts_.MergeFrom(from.file_parts_);
  dir_contents_.MergeFrom(from.dir_contents_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
    if (cached_has_bits & 0x00000002u) {
      locked_ = from.locked_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MetadataEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataEntry::CopyFrom(const MetadataEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->file_parts())) return false;
  return true;
}

void MetadataEntry::Swap(MetadataEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataEntry::InternalSwap(MetadataEntry* other) {
  file_parts_.InternalSwap(&other->file_parts_);
  dir_contents_.InternalSwap(&other->dir_contents_);
  std::swap(permissions_, other->permissions_);
  std::swap(locked_, other->locked_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataEntry::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataEntry

// optional bool locked = 1 [default = false];
bool MetadataEntry::has_locked() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MetadataEntry::set_has_locked() {
  _has_bits_[0] |= 0x00000002u;
}
void MetadataEntry::clear_has_locked() {
  _has_bits_[0] &= ~0x00000002u;
}
void MetadataEntry::clear_locked() {
  locked_ = false;
  clear_has_locked();
}
bool MetadataEntry::locked() const {
  // @@protoc_insertion_point(field_get:MetadataEntry.locked)
  return locked_;
}
void MetadataEntry::set_locked(bool value) {
  set_has_locked();
  locked_ = value;
  // @@protoc_insertion_point(field_set:MetadataEntry.locked)
}

// optional .Permissions permissions = 2;
bool MetadataEntry::has_permissions() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataEntry::set_has_permissions() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataEntry::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataEntry::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
const ::Permissions& MetadataEntry::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataEntry.permissions)
  return permissions_ != NULL ? *permissions_
                         : *::Permissions::internal_default_instance();
}
::Permissions* MetadataEntry::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataEntry.permissions)
  return permissions_;
}
::Permissions* MetadataEntry::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataEntry.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
void MetadataEntry::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataEntry.permissions)
}

// required .FileType type = 5 [default = DATA];
bool MetadataEntry::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MetadataEntry::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void MetadataEntry::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void MetadataEntry::clear_type() {
  type_ = 0;
  clear_has_type();
}
::FileType MetadataEntry::type() const {
  // @@protoc_insertion_point(field_get:MetadataEntry.type)
  return static_cast< ::FileType >(type_);
}
void MetadataEntry::set_type(::FileType value) {
  assert(::FileType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MetadataEntry.type)
}

// repeated .FilePart file_parts = 6;
int MetadataEntry::file_parts_size() const {
  return file_parts_.size();
}
void MetadataEntry::clear_file_parts() {
  file_parts_.Clear();
}
const ::FilePart& MetadataEntry::file_parts(int index) const {
  // @@protoc_insertion_point(field_get:MetadataEntry.file_parts)
  return file_parts_.Get(index);
}
::FilePart* MetadataEntry::mutable_file_parts(int index) {
  // @@protoc_insertion_point(field_mutable:MetadataEntry.file_parts)
  return file_parts_.Mutable(index);
}
::FilePart* MetadataEntry::add_file_parts() {
  // @@protoc_insertion_point(field_add:MetadataEntry.file_parts)
  return file_parts_.Add();
}
::google::protobuf::RepeatedPtrField< ::FilePart >*
MetadataEntry::mutable_file_parts() {
  // @@protoc_insertion_point(field_mutable_list:MetadataEntry.file_parts)
  return &file_parts_;
}
const ::google::protobuf::RepeatedPtrField< ::FilePart >&
MetadataEntry::file_parts() const {
  // @@protoc_insertion_point(field_list:MetadataEntry.file_parts)
  return file_parts_;
}

// repeated string dir_contents = 7;
int MetadataEntry::dir_contents_size() const {
  return dir_contents_.size();
}
void MetadataEntry::clear_dir_contents() {
  dir_contents_.Clear();
}
const ::std::string& MetadataEntry::dir_contents(int index) const {
  // @@protoc_insertion_point(field_get:MetadataEntry.dir_contents)
  return dir_contents_.Get(index);
}
::std::string* MetadataEntry::mutable_dir_contents(int index) {
  // @@protoc_insertion_point(field_mutable:MetadataEntry.dir_contents)
  return dir_contents_.Mutable(index);
}
void MetadataEntry::set_dir_contents(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MetadataEntry.dir_contents)
  dir_contents_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void MetadataEntry::set_dir_contents(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:MetadataEntry.dir_contents)
  dir_contents_.Mutable(index)->assign(std::move(value));
}
#endif
void MetadataEntry::set_dir_contents(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  dir_contents_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MetadataEntry.dir_contents)
}
void MetadataEntry::set_dir_contents(int index, const char* value, size_t size) {
  dir_contents_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MetadataEntry.dir_contents)
}
::std::string* MetadataEntry::add_dir_contents() {
  // @@protoc_insertion_point(field_add_mutable:MetadataEntry.dir_contents)
  return dir_contents_.Add();
}
void MetadataEntry::add_dir_contents(const ::std::string& value) {
  dir_contents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MetadataEntry.dir_contents)
}
#if LANG_CXX11
void MetadataEntry::add_dir_contents(::std::string&& value) {
  dir_contents_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:MetadataEntry.dir_contents)
}
#endif
void MetadataEntry::add_dir_contents(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  dir_contents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MetadataEntry.dir_contents)
}
void MetadataEntry::add_dir_contents(const char* value, size_t size) {
  dir_contents_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MetadataEntry.dir_contents)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MetadataEntry::dir_contents() const {
  // @@protoc_insertion_point(field_list:MetadataEntry.dir_contents)
  return dir_contents_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MetadataEntry::mutable_dir_contents() {
  // @@protoc_insertion_point(field_mutable_list:MetadataEntry.dir_contents)
  return &dir_contents_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_CreateFileInput::kPathFieldNumber;
const int MetadataAction_CreateFileInput::kPermissionsFieldNumber;
const int MetadataAction_CreateFileInput::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_CreateFileInput::MetadataAction_CreateFileInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.CreateFileInput)
}
MetadataAction_CreateFileInput::MetadataAction_CreateFileInput(const MetadataAction_CreateFileInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.CreateFileInput)
}

void MetadataAction_CreateFileInput::SharedCtor() {
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&permissions_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&permissions_) + sizeof(type_));
}

MetadataAction_CreateFileInput::~MetadataAction_CreateFileInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.CreateFileInput)
  SharedDtor();
}

void MetadataAction_CreateFileInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete permissions_;
  }
}

void MetadataAction_CreateFileInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_CreateFileInput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_CreateFileInput& MetadataAction_CreateFileInput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_CreateFileInput* MetadataAction_CreateFileInput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_CreateFileInput* n = new MetadataAction_CreateFileInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_CreateFileInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.CreateFileInput)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_path()) {
      GOOGLE_DCHECK(!path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*path_.UnsafeRawStringPointer())->clear();
    }
    if (has_permissions()) {
      GOOGLE_DCHECK(permissions_ != NULL);
      permissions_->::Permissions::Clear();
    }
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_CreateFileInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.CreateFileInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.CreateFileInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .FileType type = 3 [default = DATA];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::FileType_IsValid(value)) {
            set_type(static_cast< ::FileType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.CreateFileInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.CreateFileInput)
  return false;
#undef DO_
}

void MetadataAction_CreateFileInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.CreateFileInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.CreateFileInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->permissions_, output);
  }

  // required .FileType type = 3 [default = DATA];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.CreateFileInput)
}

::google::protobuf::uint8* MetadataAction_CreateFileInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.CreateFileInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.CreateFileInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->permissions_, deterministic, target);
  }

  // required .FileType type = 3 [default = DATA];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.CreateFileInput)
  return target;
}

size_t MetadataAction_CreateFileInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MetadataAction.CreateFileInput)
  size_t total_size = 0;

  if (has_path()) {
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_type()) {
    // required .FileType type = 3 [default = DATA];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t MetadataAction_CreateFileInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.CreateFileInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required .FileType type = 3 [default = DATA];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .Permissions permissions = 2;
  if (has_permissions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_CreateFileInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.CreateFileInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_CreateFileInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_CreateFileInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.CreateFileInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.CreateFileInput)
    MergeFrom(*source);
  }
}

void MetadataAction_CreateFileInput::MergeFrom(const MetadataAction_CreateFileInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.CreateFileInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MetadataAction_CreateFileInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.CreateFileInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_CreateFileInput::CopyFrom(const MetadataAction_CreateFileInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.CreateFileInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_CreateFileInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void MetadataAction_CreateFileInput::Swap(MetadataAction_CreateFileInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_CreateFileInput::InternalSwap(MetadataAction_CreateFileInput* other) {
  path_.Swap(&other->path_);
  std::swap(permissions_, other->permissions_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_CreateFileInput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_CreateFileInput

// required string path = 1;
bool MetadataAction_CreateFileInput::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_CreateFileInput::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_CreateFileInput::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_CreateFileInput::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
const ::std::string& MetadataAction_CreateFileInput::path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CreateFileInput.path)
  return path_.GetNoArena();
}
void MetadataAction_CreateFileInput::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.CreateFileInput.path)
}
#if LANG_CXX11
void MetadataAction_CreateFileInput::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MetadataAction.CreateFileInput.path)
}
#endif
void MetadataAction_CreateFileInput::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.CreateFileInput.path)
}
void MetadataAction_CreateFileInput::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.CreateFileInput.path)
}
::std::string* MetadataAction_CreateFileInput::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.CreateFileInput.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MetadataAction_CreateFileInput::release_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.CreateFileInput.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MetadataAction_CreateFileInput::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.CreateFileInput.path)
}

// optional .Permissions permissions = 2;
bool MetadataAction_CreateFileInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MetadataAction_CreateFileInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
void MetadataAction_CreateFileInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
void MetadataAction_CreateFileInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
const ::Permissions& MetadataAction_CreateFileInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CreateFileInput.permissions)
  return permissions_ != NULL ? *permissions_
                         : *::Permissions::internal_default_instance();
}
::Permissions* MetadataAction_CreateFileInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.CreateFileInput.permissions)
  return permissions_;
}
::Permissions* MetadataAction_CreateFileInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.CreateFileInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
void MetadataAction_CreateFileInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.CreateFileInput.permissions)
}

// required .FileType type = 3 [default = DATA];
bool MetadataAction_CreateFileInput::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MetadataAction_CreateFileInput::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void MetadataAction_CreateFileInput::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void MetadataAction_CreateFileInput::clear_type() {
  type_ = 0;
  clear_has_type();
}
::FileType MetadataAction_CreateFileInput::type() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CreateFileInput.type)
  return static_cast< ::FileType >(type_);
}
void MetadataAction_CreateFileInput::set_type(::FileType value) {
  assert(::FileType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.CreateFileInput.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_CreateFileOutput::kSuccessFieldNumber;
const int MetadataAction_CreateFileOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_CreateFileOutput::MetadataAction_CreateFileOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.CreateFileOutput)
}
MetadataAction_CreateFileOutput::MetadataAction_CreateFileOutput(const MetadataAction_CreateFileOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.CreateFileOutput)
}

void MetadataAction_CreateFileOutput::SharedCtor() {
  _cached_size_ = 0;
  success_ = true;
}

MetadataAction_CreateFileOutput::~MetadataAction_CreateFileOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.CreateFileOutput)
  SharedDtor();
}

void MetadataAction_CreateFileOutput::SharedDtor() {
}

void MetadataAction_CreateFileOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_CreateFileOutput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_CreateFileOutput& MetadataAction_CreateFileOutput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_CreateFileOutput* MetadataAction_CreateFileOutput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_CreateFileOutput* n = new MetadataAction_CreateFileOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_CreateFileOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.CreateFileOutput)
  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_CreateFileOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.CreateFileOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.CreateFileOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.CreateFileOutput)
  return false;
#undef DO_
}

void MetadataAction_CreateFileOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.CreateFileOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.CreateFileOutput)
}

::google::protobuf::uint8* MetadataAction_CreateFileOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.CreateFileOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.CreateFileOutput)
  return target;
}

size_t MetadataAction_CreateFileOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.CreateFileOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->errors_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(i));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  if (has_success()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_CreateFileOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.CreateFileOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_CreateFileOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_CreateFileOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.CreateFileOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.CreateFileOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_CreateFileOutput::MergeFrom(const MetadataAction_CreateFileOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.CreateFileOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_CreateFileOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.CreateFileOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_CreateFileOutput::CopyFrom(const MetadataAction_CreateFileOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.CreateFileOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_CreateFileOutput::IsInitialized() const {
  return true;
}

void MetadataAction_CreateFileOutput::Swap(MetadataAction_CreateFileOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_CreateFileOutput::InternalSwap(MetadataAction_CreateFileOutput* other) {
  errors_.InternalSwap(&other->errors_);
  std::swap(success_, other->success_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_CreateFileOutput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_CreateFileOutput

// optional bool success = 1 [default = true];
bool MetadataAction_CreateFileOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_CreateFileOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_CreateFileOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_CreateFileOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
bool MetadataAction_CreateFileOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CreateFileOutput.success)
  return success_;
}
void MetadataAction_CreateFileOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.CreateFileOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
int MetadataAction_CreateFileOutput::errors_size() const {
  return errors_.size();
}
void MetadataAction_CreateFileOutput::clear_errors() {
  errors_.Clear();
}
::MetadataAction_Error MetadataAction_CreateFileOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.CreateFileOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
void MetadataAction_CreateFileOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.CreateFileOutput.errors)
}
void MetadataAction_CreateFileOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.CreateFileOutput.errors)
}
const ::google::protobuf::RepeatedField<int>&
MetadataAction_CreateFileOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.CreateFileOutput.errors)
  return errors_;
}
::google::protobuf::RepeatedField<int>*
MetadataAction_CreateFileOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.CreateFileOutput.errors)
  return &errors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_EraseInput::kPathFieldNumber;
const int MetadataAction_EraseInput::kPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_EraseInput::MetadataAction_EraseInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.EraseInput)
}
MetadataAction_EraseInput::MetadataAction_EraseInput(const MetadataAction_EraseInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MetadataAction.EraseInput)
}

void MetadataAction_EraseInput::SharedCtor() {
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissions_ = NULL;
}

MetadataAction_EraseInput::~MetadataAction_EraseInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.EraseInput)
  SharedDtor();
}

void MetadataAction_EraseInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete permissions_;
  }
}

void MetadataAction_EraseInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_EraseInput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_EraseInput& MetadataAction_EraseInput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_EraseInput* MetadataAction_EraseInput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_EraseInput* n = new MetadataAction_EraseInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_EraseInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.EraseInput)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_path()) {
      GOOGLE_DCHECK(!path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*path_.UnsafeRawStringPointer())->clear();
    }
    if (has_permissions()) {
      GOOGLE_DCHECK(permissions_ != NULL);
      permissions_->::Permissions::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_EraseInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.EraseInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.EraseInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.EraseInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.EraseInput)
  return false;
#undef DO_
}

void MetadataAction_EraseInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.EraseInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.EraseInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->permissions_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.EraseInput)
}

::google::protobuf::uint8* MetadataAction_EraseInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.EraseInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.EraseInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->permissions_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.EraseInput)
  return target;
}

size_t MetadataAction_EraseInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.EraseInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required string path = 1;
  if (has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }
  // optional .Permissions permissions = 2;
  if (has_permissions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_EraseInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.EraseInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_EraseInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_EraseInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.EraseInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.EraseInput)
    MergeFrom(*source);
  }
}

void MetadataAction_EraseInput::MergeFrom(const MetadataAction_EraseInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.EraseInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
  }
}

void MetadataAction_EraseInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.EraseInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_EraseInput::CopyFrom(const MetadataAction_EraseInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.EraseInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_EraseInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MetadataAction_EraseInput::Swap(MetadataAction_EraseInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_EraseInput::InternalSwap(MetadataAction_EraseInput* other) {
  path_.Swap(&other->path_);
  std::swap(permissions_, other->permissions_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_EraseInput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_EraseInput

// required string path = 1;
bool MetadataAction_EraseInput::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_EraseInput::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_EraseInput::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_EraseInput::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
const ::std::string& MetadataAction_EraseInput::path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.EraseInput.path)
  return path_.GetNoArena();
}
void MetadataAction_EraseInput::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.EraseInput.path)
}
#if LANG_CXX11
void MetadataAction_EraseInput::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MetadataAction.EraseInput.path)
}
#endif
void MetadataAction_EraseInput::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.EraseInput.path)
}
void MetadataAction_EraseInput::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.EraseInput.path)
}
::std::string* MetadataAction_EraseInput::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.EraseInput.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MetadataAction_EraseInput::release_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.EraseInput.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MetadataAction_EraseInput::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.EraseInput.path)
}

// optional .Permissions permissions = 2;
bool MetadataAction_EraseInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MetadataAction_EraseInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
void MetadataAction_EraseInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
void MetadataAction_EraseInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
const ::Permissions& MetadataAction_EraseInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.EraseInput.permissions)
  return permissions_ != NULL ? *permissions_
                         : *::Permissions::internal_default_instance();
}
::Permissions* MetadataAction_EraseInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.EraseInput.permissions)
  return permissions_;
}
::Permissions* MetadataAction_EraseInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.EraseInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
void MetadataAction_EraseInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.EraseInput.permissions)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_EraseOutput::kSuccessFieldNumber;
const int MetadataAction_EraseOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_EraseOutput::MetadataAction_EraseOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.EraseOutput)
}
MetadataAction_EraseOutput::MetadataAction_EraseOutput(const MetadataAction_EraseOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.EraseOutput)
}

void MetadataAction_EraseOutput::SharedCtor() {
  _cached_size_ = 0;
  success_ = true;
}

MetadataAction_EraseOutput::~MetadataAction_EraseOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.EraseOutput)
  SharedDtor();
}

void MetadataAction_EraseOutput::SharedDtor() {
}

void MetadataAction_EraseOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_EraseOutput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_EraseOutput& MetadataAction_EraseOutput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_EraseOutput* MetadataAction_EraseOutput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_EraseOutput* n = new MetadataAction_EraseOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_EraseOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.EraseOutput)
  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_EraseOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.EraseOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.EraseOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.EraseOutput)
  return false;
#undef DO_
}

void MetadataAction_EraseOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.EraseOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.EraseOutput)
}

::google::protobuf::uint8* MetadataAction_EraseOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.EraseOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.EraseOutput)
  return target;
}

size_t MetadataAction_EraseOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.EraseOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->errors_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(i));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  if (has_success()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_EraseOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.EraseOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_EraseOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_EraseOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.EraseOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.EraseOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_EraseOutput::MergeFrom(const MetadataAction_EraseOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.EraseOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_EraseOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.EraseOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_EraseOutput::CopyFrom(const MetadataAction_EraseOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.EraseOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_EraseOutput::IsInitialized() const {
  return true;
}

void MetadataAction_EraseOutput::Swap(MetadataAction_EraseOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_EraseOutput::InternalSwap(MetadataAction_EraseOutput* other) {
  errors_.InternalSwap(&other->errors_);
  std::swap(success_, other->success_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_EraseOutput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_EraseOutput

// optional bool success = 1 [default = true];
bool MetadataAction_EraseOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_EraseOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_EraseOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_EraseOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
bool MetadataAction_EraseOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.EraseOutput.success)
  return success_;
}
void MetadataAction_EraseOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.EraseOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
int MetadataAction_EraseOutput::errors_size() const {
  return errors_.size();
}
void MetadataAction_EraseOutput::clear_errors() {
  errors_.Clear();
}
::MetadataAction_Error MetadataAction_EraseOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.EraseOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
void MetadataAction_EraseOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.EraseOutput.errors)
}
void MetadataAction_EraseOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.EraseOutput.errors)
}
const ::google::protobuf::RepeatedField<int>&
MetadataAction_EraseOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.EraseOutput.errors)
  return errors_;
}
::google::protobuf::RepeatedField<int>*
MetadataAction_EraseOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.EraseOutput.errors)
  return &errors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_CopyInput::kFromPathFieldNumber;
const int MetadataAction_CopyInput::kToPathFieldNumber;
const int MetadataAction_CopyInput::kPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_CopyInput::MetadataAction_CopyInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.CopyInput)
}
MetadataAction_CopyInput::MetadataAction_CopyInput(const MetadataAction_CopyInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_from_path()) {
    from_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_path_);
  }
  to_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to_path()) {
    to_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MetadataAction.CopyInput)
}

void MetadataAction_CopyInput::SharedCtor() {
  _cached_size_ = 0;
  from_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissions_ = NULL;
}

MetadataAction_CopyInput::~MetadataAction_CopyInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.CopyInput)
  SharedDtor();
}

void MetadataAction_CopyInput::SharedDtor() {
  from_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete permissions_;
  }
}

void MetadataAction_CopyInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_CopyInput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_CopyInput& MetadataAction_CopyInput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_CopyInput* MetadataAction_CopyInput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_CopyInput* n = new MetadataAction_CopyInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_CopyInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.CopyInput)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_from_path()) {
      GOOGLE_DCHECK(!from_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*from_path_.UnsafeRawStringPointer())->clear();
    }
    if (has_to_path()) {
      GOOGLE_DCHECK(!to_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*to_path_.UnsafeRawStringPointer())->clear();
    }
    if (has_permissions()) {
      GOOGLE_DCHECK(permissions_ != NULL);
      permissions_->::Permissions::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_CopyInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.CopyInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string from_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from_path().data(), this->from_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.CopyInput.from_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string to_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to_path().data(), this->to_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.CopyInput.to_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.CopyInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.CopyInput)
  return false;
#undef DO_
}

void MetadataAction_CopyInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.CopyInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string from_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_path().data(), this->from_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.CopyInput.from_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_path(), output);
  }

  // required string to_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_path().data(), this->to_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.CopyInput.to_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to_path(), output);
  }

  // optional .Permissions permissions = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->permissions_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.CopyInput)
}

::google::protobuf::uint8* MetadataAction_CopyInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.CopyInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string from_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_path().data(), this->from_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.CopyInput.from_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_path(), target);
  }

  // required string to_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_path().data(), this->to_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.CopyInput.to_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to_path(), target);
  }

  // optional .Permissions permissions = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->permissions_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.CopyInput)
  return target;
}

size_t MetadataAction_CopyInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MetadataAction.CopyInput)
  size_t total_size = 0;

  if (has_from_path()) {
    // required string from_path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_path());
  }

  if (has_to_path()) {
    // required string to_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_path());
  }

  return total_size;
}
size_t MetadataAction_CopyInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.CopyInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string from_path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_path());

    // required string to_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_path());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .Permissions permissions = 3;
  if (has_permissions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_CopyInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.CopyInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_CopyInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_CopyInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.CopyInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.CopyInput)
    MergeFrom(*source);
  }
}

void MetadataAction_CopyInput::MergeFrom(const MetadataAction_CopyInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.CopyInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_from_path();
      from_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_path_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_to_path();
      to_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_path_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
  }
}

void MetadataAction_CopyInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.CopyInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_CopyInput::CopyFrom(const MetadataAction_CopyInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.CopyInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_CopyInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MetadataAction_CopyInput::Swap(MetadataAction_CopyInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_CopyInput::InternalSwap(MetadataAction_CopyInput* other) {
  from_path_.Swap(&other->from_path_);
  to_path_.Swap(&other->to_path_);
  std::swap(permissions_, other->permissions_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_CopyInput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_CopyInput

// required string from_path = 1;
bool MetadataAction_CopyInput::has_from_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_CopyInput::set_has_from_path() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_CopyInput::clear_has_from_path() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_CopyInput::clear_from_path() {
  from_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_path();
}
const ::std::string& MetadataAction_CopyInput::from_path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CopyInput.from_path)
  return from_path_.GetNoArena();
}
void MetadataAction_CopyInput::set_from_path(const ::std::string& value) {
  set_has_from_path();
  from_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.CopyInput.from_path)
}
#if LANG_CXX11
void MetadataAction_CopyInput::set_from_path(::std::string&& value) {
  set_has_from_path();
  from_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MetadataAction.CopyInput.from_path)
}
#endif
void MetadataAction_CopyInput::set_from_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from_path();
  from_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.CopyInput.from_path)
}
void MetadataAction_CopyInput::set_from_path(const char* value, size_t size) {
  set_has_from_path();
  from_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.CopyInput.from_path)
}
::std::string* MetadataAction_CopyInput::mutable_from_path() {
  set_has_from_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.CopyInput.from_path)
  return from_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MetadataAction_CopyInput::release_from_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.CopyInput.from_path)
  clear_has_from_path();
  return from_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MetadataAction_CopyInput::set_allocated_from_path(::std::string* from_path) {
  if (from_path != NULL) {
    set_has_from_path();
  } else {
    clear_has_from_path();
  }
  from_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.CopyInput.from_path)
}

// required string to_path = 2;
bool MetadataAction_CopyInput::has_to_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MetadataAction_CopyInput::set_has_to_path() {
  _has_bits_[0] |= 0x00000002u;
}
void MetadataAction_CopyInput::clear_has_to_path() {
  _has_bits_[0] &= ~0x00000002u;
}
void MetadataAction_CopyInput::clear_to_path() {
  to_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to_path();
}
const ::std::string& MetadataAction_CopyInput::to_path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CopyInput.to_path)
  return to_path_.GetNoArena();
}
void MetadataAction_CopyInput::set_to_path(const ::std::string& value) {
  set_has_to_path();
  to_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.CopyInput.to_path)
}
#if LANG_CXX11
void MetadataAction_CopyInput::set_to_path(::std::string&& value) {
  set_has_to_path();
  to_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MetadataAction.CopyInput.to_path)
}
#endif
void MetadataAction_CopyInput::set_to_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to_path();
  to_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.CopyInput.to_path)
}
void MetadataAction_CopyInput::set_to_path(const char* value, size_t size) {
  set_has_to_path();
  to_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.CopyInput.to_path)
}
::std::string* MetadataAction_CopyInput::mutable_to_path() {
  set_has_to_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.CopyInput.to_path)
  return to_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MetadataAction_CopyInput::release_to_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.CopyInput.to_path)
  clear_has_to_path();
  return to_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MetadataAction_CopyInput::set_allocated_to_path(::std::string* to_path) {
  if (to_path != NULL) {
    set_has_to_path();
  } else {
    clear_has_to_path();
  }
  to_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.CopyInput.to_path)
}

// optional .Permissions permissions = 3;
bool MetadataAction_CopyInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MetadataAction_CopyInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000004u;
}
void MetadataAction_CopyInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000004u;
}
void MetadataAction_CopyInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
const ::Permissions& MetadataAction_CopyInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CopyInput.permissions)
  return permissions_ != NULL ? *permissions_
                         : *::Permissions::internal_default_instance();
}
::Permissions* MetadataAction_CopyInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.CopyInput.permissions)
  return permissions_;
}
::Permissions* MetadataAction_CopyInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.CopyInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
void MetadataAction_CopyInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.CopyInput.permissions)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_CopyOutput::kSuccessFieldNumber;
const int MetadataAction_CopyOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_CopyOutput::MetadataAction_CopyOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.CopyOutput)
}
MetadataAction_CopyOutput::MetadataAction_CopyOutput(const MetadataAction_CopyOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.CopyOutput)
}

void MetadataAction_CopyOutput::SharedCtor() {
  _cached_size_ = 0;
  success_ = true;
}

MetadataAction_CopyOutput::~MetadataAction_CopyOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.CopyOutput)
  SharedDtor();
}

void MetadataAction_CopyOutput::SharedDtor() {
}

void MetadataAction_CopyOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_CopyOutput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_CopyOutput& MetadataAction_CopyOutput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_CopyOutput* MetadataAction_CopyOutput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_CopyOutput* n = new MetadataAction_CopyOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_CopyOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.CopyOutput)
  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_CopyOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.CopyOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.CopyOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.CopyOutput)
  return false;
#undef DO_
}

void MetadataAction_CopyOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.CopyOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.CopyOutput)
}

::google::protobuf::uint8* MetadataAction_CopyOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.CopyOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.CopyOutput)
  return target;
}

size_t MetadataAction_CopyOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.CopyOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->errors_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(i));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  if (has_success()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_CopyOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.CopyOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_CopyOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_CopyOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.CopyOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.CopyOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_CopyOutput::MergeFrom(const MetadataAction_CopyOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.CopyOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_CopyOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.CopyOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_CopyOutput::CopyFrom(const MetadataAction_CopyOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.CopyOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_CopyOutput::IsInitialized() const {
  return true;
}

void MetadataAction_CopyOutput::Swap(MetadataAction_CopyOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_CopyOutput::InternalSwap(MetadataAction_CopyOutput* other) {
  errors_.InternalSwap(&other->errors_);
  std::swap(success_, other->success_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_CopyOutput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_CopyOutput

// optional bool success = 1 [default = true];
bool MetadataAction_CopyOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_CopyOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_CopyOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_CopyOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
bool MetadataAction_CopyOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CopyOutput.success)
  return success_;
}
void MetadataAction_CopyOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.CopyOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
int MetadataAction_CopyOutput::errors_size() const {
  return errors_.size();
}
void MetadataAction_CopyOutput::clear_errors() {
  errors_.Clear();
}
::MetadataAction_Error MetadataAction_CopyOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.CopyOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
void MetadataAction_CopyOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.CopyOutput.errors)
}
void MetadataAction_CopyOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.CopyOutput.errors)
}
const ::google::protobuf::RepeatedField<int>&
MetadataAction_CopyOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.CopyOutput.errors)
  return errors_;
}
::google::protobuf::RepeatedField<int>*
MetadataAction_CopyOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.CopyOutput.errors)
  return &errors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_RenameInput::kFromPathFieldNumber;
const int MetadataAction_RenameInput::kToPathFieldNumber;
const int MetadataAction_RenameInput::kPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_RenameInput::MetadataAction_RenameInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.RenameInput)
}
MetadataAction_RenameInput::MetadataAction_RenameInput(const MetadataAction_RenameInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_from_path()) {
    from_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_path_);
  }
  to_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to_path()) {
    to_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MetadataAction.RenameInput)
}

void MetadataAction_RenameInput::SharedCtor() {
  _cached_size_ = 0;
  from_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissions_ = NULL;
}

MetadataAction_RenameInput::~MetadataAction_RenameInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.RenameInput)
  SharedDtor();
}

void MetadataAction_RenameInput::SharedDtor() {
  from_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete permissions_;
  }
}

void MetadataAction_RenameInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_RenameInput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_RenameInput& MetadataAction_RenameInput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_RenameInput* MetadataAction_RenameInput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_RenameInput* n = new MetadataAction_RenameInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_RenameInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.RenameInput)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_from_path()) {
      GOOGLE_DCHECK(!from_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*from_path_.UnsafeRawStringPointer())->clear();
    }
    if (has_to_path()) {
      GOOGLE_DCHECK(!to_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*to_path_.UnsafeRawStringPointer())->clear();
    }
    if (has_permissions()) {
      GOOGLE_DCHECK(permissions_ != NULL);
      permissions_->::Permissions::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_RenameInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.RenameInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string from_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from_path().data(), this->from_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.RenameInput.from_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string to_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to_path().data(), this->to_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.RenameInput.to_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.RenameInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.RenameInput)
  return false;
#undef DO_
}

void MetadataAction_RenameInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.RenameInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string from_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_path().data(), this->from_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.RenameInput.from_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_path(), output);
  }

  // required string to_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_path().data(), this->to_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.RenameInput.to_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to_path(), output);
  }

  // optional .Permissions permissions = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->permissions_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.RenameInput)
}

::google::protobuf::uint8* MetadataAction_RenameInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.RenameInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string from_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_path().data(), this->from_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.RenameInput.from_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_path(), target);
  }

  // required string to_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_path().data(), this->to_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.RenameInput.to_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to_path(), target);
  }

  // optional .Permissions permissions = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->permissions_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.RenameInput)
  return target;
}

size_t MetadataAction_RenameInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MetadataAction.RenameInput)
  size_t total_size = 0;

  if (has_from_path()) {
    // required string from_path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_path());
  }

  if (has_to_path()) {
    // required string to_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_path());
  }

  return total_size;
}
size_t MetadataAction_RenameInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.RenameInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string from_path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_path());

    // required string to_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_path());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .Permissions permissions = 3;
  if (has_permissions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_RenameInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.RenameInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_RenameInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_RenameInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.RenameInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.RenameInput)
    MergeFrom(*source);
  }
}

void MetadataAction_RenameInput::MergeFrom(const MetadataAction_RenameInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.RenameInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_from_path();
      from_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_path_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_to_path();
      to_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_path_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
  }
}

void MetadataAction_RenameInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.RenameInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_RenameInput::CopyFrom(const MetadataAction_RenameInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.RenameInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_RenameInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MetadataAction_RenameInput::Swap(MetadataAction_RenameInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_RenameInput::InternalSwap(MetadataAction_RenameInput* other) {
  from_path_.Swap(&other->from_path_);
  to_path_.Swap(&other->to_path_);
  std::swap(permissions_, other->permissions_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_RenameInput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_RenameInput

// required string from_path = 1;
bool MetadataAction_RenameInput::has_from_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_RenameInput::set_has_from_path() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_RenameInput::clear_has_from_path() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_RenameInput::clear_from_path() {
  from_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_path();
}
const ::std::string& MetadataAction_RenameInput::from_path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.RenameInput.from_path)
  return from_path_.GetNoArena();
}
void MetadataAction_RenameInput::set_from_path(const ::std::string& value) {
  set_has_from_path();
  from_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.RenameInput.from_path)
}
#if LANG_CXX11
void MetadataAction_RenameInput::set_from_path(::std::string&& value) {
  set_has_from_path();
  from_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MetadataAction.RenameInput.from_path)
}
#endif
void MetadataAction_RenameInput::set_from_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from_path();
  from_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.RenameInput.from_path)
}
void MetadataAction_RenameInput::set_from_path(const char* value, size_t size) {
  set_has_from_path();
  from_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.RenameInput.from_path)
}
::std::string* MetadataAction_RenameInput::mutable_from_path() {
  set_has_from_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.RenameInput.from_path)
  return from_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MetadataAction_RenameInput::release_from_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.RenameInput.from_path)
  clear_has_from_path();
  return from_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MetadataAction_RenameInput::set_allocated_from_path(::std::string* from_path) {
  if (from_path != NULL) {
    set_has_from_path();
  } else {
    clear_has_from_path();
  }
  from_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.RenameInput.from_path)
}

// required string to_path = 2;
bool MetadataAction_RenameInput::has_to_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MetadataAction_RenameInput::set_has_to_path() {
  _has_bits_[0] |= 0x00000002u;
}
void MetadataAction_RenameInput::clear_has_to_path() {
  _has_bits_[0] &= ~0x00000002u;
}
void MetadataAction_RenameInput::clear_to_path() {
  to_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to_path();
}
const ::std::string& MetadataAction_RenameInput::to_path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.RenameInput.to_path)
  return to_path_.GetNoArena();
}
void MetadataAction_RenameInput::set_to_path(const ::std::string& value) {
  set_has_to_path();
  to_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.RenameInput.to_path)
}
#if LANG_CXX11
void MetadataAction_RenameInput::set_to_path(::std::string&& value) {
  set_has_to_path();
  to_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MetadataAction.RenameInput.to_path)
}
#endif
void MetadataAction_RenameInput::set_to_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to_path();
  to_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.RenameInput.to_path)
}
void MetadataAction_RenameInput::set_to_path(const char* value, size_t size) {
  set_has_to_path();
  to_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.RenameInput.to_path)
}
::std::string* MetadataAction_RenameInput::mutable_to_path() {
  set_has_to_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.RenameInput.to_path)
  return to_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MetadataAction_RenameInput::release_to_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.RenameInput.to_path)
  clear_has_to_path();
  return to_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MetadataAction_RenameInput::set_allocated_to_path(::std::string* to_path) {
  if (to_path != NULL) {
    set_has_to_path();
  } else {
    clear_has_to_path();
  }
  to_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.RenameInput.to_path)
}

// optional .Permissions permissions = 3;
bool MetadataAction_RenameInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MetadataAction_RenameInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000004u;
}
void MetadataAction_RenameInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000004u;
}
void MetadataAction_RenameInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
const ::Permissions& MetadataAction_RenameInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.RenameInput.permissions)
  return permissions_ != NULL ? *permissions_
                         : *::Permissions::internal_default_instance();
}
::Permissions* MetadataAction_RenameInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.RenameInput.permissions)
  return permissions_;
}
::Permissions* MetadataAction_RenameInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.RenameInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
void MetadataAction_RenameInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.RenameInput.permissions)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_RenameOutput::kSuccessFieldNumber;
const int MetadataAction_RenameOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_RenameOutput::MetadataAction_RenameOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.RenameOutput)
}
MetadataAction_RenameOutput::MetadataAction_RenameOutput(const MetadataAction_RenameOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.RenameOutput)
}

void MetadataAction_RenameOutput::SharedCtor() {
  _cached_size_ = 0;
  success_ = true;
}

MetadataAction_RenameOutput::~MetadataAction_RenameOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.RenameOutput)
  SharedDtor();
}

void MetadataAction_RenameOutput::SharedDtor() {
}

void MetadataAction_RenameOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_RenameOutput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_RenameOutput& MetadataAction_RenameOutput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_RenameOutput* MetadataAction_RenameOutput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_RenameOutput* n = new MetadataAction_RenameOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_RenameOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.RenameOutput)
  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_RenameOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.RenameOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.RenameOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.RenameOutput)
  return false;
#undef DO_
}

void MetadataAction_RenameOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.RenameOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.RenameOutput)
}

::google::protobuf::uint8* MetadataAction_RenameOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.RenameOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.RenameOutput)
  return target;
}

size_t MetadataAction_RenameOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.RenameOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->errors_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(i));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  if (has_success()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_RenameOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.RenameOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_RenameOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_RenameOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.RenameOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.RenameOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_RenameOutput::MergeFrom(const MetadataAction_RenameOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.RenameOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_RenameOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.RenameOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_RenameOutput::CopyFrom(const MetadataAction_RenameOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.RenameOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_RenameOutput::IsInitialized() const {
  return true;
}

void MetadataAction_RenameOutput::Swap(MetadataAction_RenameOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_RenameOutput::InternalSwap(MetadataAction_RenameOutput* other) {
  errors_.InternalSwap(&other->errors_);
  std::swap(success_, other->success_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_RenameOutput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_RenameOutput

// optional bool success = 1 [default = true];
bool MetadataAction_RenameOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_RenameOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_RenameOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_RenameOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
bool MetadataAction_RenameOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.RenameOutput.success)
  return success_;
}
void MetadataAction_RenameOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.RenameOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
int MetadataAction_RenameOutput::errors_size() const {
  return errors_.size();
}
void MetadataAction_RenameOutput::clear_errors() {
  errors_.Clear();
}
::MetadataAction_Error MetadataAction_RenameOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.RenameOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
void MetadataAction_RenameOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.RenameOutput.errors)
}
void MetadataAction_RenameOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.RenameOutput.errors)
}
const ::google::protobuf::RepeatedField<int>&
MetadataAction_RenameOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.RenameOutput.errors)
  return errors_;
}
::google::protobuf::RepeatedField<int>*
MetadataAction_RenameOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.RenameOutput.errors)
  return &errors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_LookupInput::kPathFieldNumber;
const int MetadataAction_LookupInput::kPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_LookupInput::MetadataAction_LookupInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.LookupInput)
}
MetadataAction_LookupInput::MetadataAction_LookupInput(const MetadataAction_LookupInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MetadataAction.LookupInput)
}

void MetadataAction_LookupInput::SharedCtor() {
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissions_ = NULL;
}

MetadataAction_LookupInput::~MetadataAction_LookupInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.LookupInput)
  SharedDtor();
}

void MetadataAction_LookupInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete permissions_;
  }
}

void MetadataAction_LookupInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_LookupInput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_LookupInput& MetadataAction_LookupInput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_LookupInput* MetadataAction_LookupInput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_LookupInput* n = new MetadataAction_LookupInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_LookupInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.LookupInput)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_path()) {
      GOOGLE_DCHECK(!path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*path_.UnsafeRawStringPointer())->clear();
    }
    if (has_permissions()) {
      GOOGLE_DCHECK(permissions_ != NULL);
      permissions_->::Permissions::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_LookupInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.LookupInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.LookupInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.LookupInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.LookupInput)
  return false;
#undef DO_
}

void MetadataAction_LookupInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.LookupInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.LookupInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->permissions_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.LookupInput)
}

::google::protobuf::uint8* MetadataAction_LookupInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.LookupInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.LookupInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->permissions_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.LookupInput)
  return target;
}

size_t MetadataAction_LookupInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.LookupInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required string path = 1;
  if (has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }
  // optional .Permissions permissions = 2;
  if (has_permissions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_LookupInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.LookupInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_LookupInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_LookupInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.LookupInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.LookupInput)
    MergeFrom(*source);
  }
}

void MetadataAction_LookupInput::MergeFrom(const MetadataAction_LookupInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.LookupInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
  }
}

void MetadataAction_LookupInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.LookupInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_LookupInput::CopyFrom(const MetadataAction_LookupInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.LookupInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_LookupInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MetadataAction_LookupInput::Swap(MetadataAction_LookupInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_LookupInput::InternalSwap(MetadataAction_LookupInput* other) {
  path_.Swap(&other->path_);
  std::swap(permissions_, other->permissions_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_LookupInput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_LookupInput

// required string path = 1;
bool MetadataAction_LookupInput::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_LookupInput::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_LookupInput::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_LookupInput::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
const ::std::string& MetadataAction_LookupInput::path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.LookupInput.path)
  return path_.GetNoArena();
}
void MetadataAction_LookupInput::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.LookupInput.path)
}
#if LANG_CXX11
void MetadataAction_LookupInput::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MetadataAction.LookupInput.path)
}
#endif
void MetadataAction_LookupInput::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.LookupInput.path)
}
void MetadataAction_LookupInput::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.LookupInput.path)
}
::std::string* MetadataAction_LookupInput::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.LookupInput.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MetadataAction_LookupInput::release_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.LookupInput.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MetadataAction_LookupInput::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.LookupInput.path)
}

// optional .Permissions permissions = 2;
bool MetadataAction_LookupInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MetadataAction_LookupInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
void MetadataAction_LookupInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
void MetadataAction_LookupInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
const ::Permissions& MetadataAction_LookupInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.LookupInput.permissions)
  return permissions_ != NULL ? *permissions_
                         : *::Permissions::internal_default_instance();
}
::Permissions* MetadataAction_LookupInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.LookupInput.permissions)
  return permissions_;
}
::Permissions* MetadataAction_LookupInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.LookupInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
void MetadataAction_LookupInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.LookupInput.permissions)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_LookupOutput::kSuccessFieldNumber;
const int MetadataAction_LookupOutput::kErrorsFieldNumber;
const int MetadataAction_LookupOutput::kEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_LookupOutput::MetadataAction_LookupOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.LookupOutput)
}
MetadataAction_LookupOutput::MetadataAction_LookupOutput(const MetadataAction_LookupOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entry()) {
    entry_ = new ::MetadataEntry(*from.entry_);
  } else {
    entry_ = NULL;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.LookupOutput)
}

void MetadataAction_LookupOutput::SharedCtor() {
  _cached_size_ = 0;
  entry_ = NULL;
  success_ = true;
}

MetadataAction_LookupOutput::~MetadataAction_LookupOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.LookupOutput)
  SharedDtor();
}

void MetadataAction_LookupOutput::SharedDtor() {
  if (this != internal_default_instance()) {
    delete entry_;
  }
}

void MetadataAction_LookupOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_LookupOutput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_LookupOutput& MetadataAction_LookupOutput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_LookupOutput* MetadataAction_LookupOutput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_LookupOutput* n = new MetadataAction_LookupOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_LookupOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.LookupOutput)
  errors_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_entry()) {
      GOOGLE_DCHECK(entry_ != NULL);
      entry_->::MetadataEntry::Clear();
    }
    success_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_LookupOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.LookupOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MetadataEntry entry = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.LookupOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.LookupOutput)
  return false;
#undef DO_
}

void MetadataAction_LookupOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.LookupOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  // optional .MetadataEntry entry = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->entry_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.LookupOutput)
}

::google::protobuf::uint8* MetadataAction_LookupOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.LookupOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  // optional .MetadataEntry entry = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->entry_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.LookupOutput)
  return target;
}

size_t MetadataAction_LookupOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.LookupOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->errors_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(i));
    }
    total_size += (1UL * count) + data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .MetadataEntry entry = 3;
    if (has_entry()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->entry_);
    }

    // optional bool success = 1 [default = true];
    if (has_success()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_LookupOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.LookupOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_LookupOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_LookupOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.LookupOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.LookupOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_LookupOutput::MergeFrom(const MetadataAction_LookupOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.LookupOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_entry()->::MetadataEntry::MergeFrom(from.entry());
    }
    if (cached_has_bits & 0x00000002u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MetadataAction_LookupOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.LookupOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_LookupOutput::CopyFrom(const MetadataAction_LookupOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.LookupOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_LookupOutput::IsInitialized() const {
  if (has_entry()) {
    if (!this->entry_->IsInitialized()) return false;
  }
  return true;
}

void MetadataAction_LookupOutput::Swap(MetadataAction_LookupOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_LookupOutput::InternalSwap(MetadataAction_LookupOutput* other) {
  errors_.InternalSwap(&other->errors_);
  std::swap(entry_, other->entry_);
  std::swap(success_, other->success_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_LookupOutput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_LookupOutput

// optional bool success = 1 [default = true];
bool MetadataAction_LookupOutput::has_success() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MetadataAction_LookupOutput::set_has_success() {
  _has_bits_[0] |= 0x00000002u;
}
void MetadataAction_LookupOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000002u;
}
void MetadataAction_LookupOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
bool MetadataAction_LookupOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.LookupOutput.success)
  return success_;
}
void MetadataAction_LookupOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.LookupOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
int MetadataAction_LookupOutput::errors_size() const {
  return errors_.size();
}
void MetadataAction_LookupOutput::clear_errors() {
  errors_.Clear();
}
::MetadataAction_Error MetadataAction_LookupOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.LookupOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
void MetadataAction_LookupOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.LookupOutput.errors)
}
void MetadataAction_LookupOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.LookupOutput.errors)
}
const ::google::protobuf::RepeatedField<int>&
MetadataAction_LookupOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.LookupOutput.errors)
  return errors_;
}
::google::protobuf::RepeatedField<int>*
MetadataAction_LookupOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.LookupOutput.errors)
  return &errors_;
}

// optional .MetadataEntry entry = 3;
bool MetadataAction_LookupOutput::has_entry() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_LookupOutput::set_has_entry() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_LookupOutput::clear_has_entry() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_LookupOutput::clear_entry() {
  if (entry_ != NULL) entry_->::MetadataEntry::Clear();
  clear_has_entry();
}
const ::MetadataEntry& MetadataAction_LookupOutput::entry() const {
  // @@protoc_insertion_point(field_get:MetadataAction.LookupOutput.entry)
  return entry_ != NULL ? *entry_
                         : *::MetadataEntry::internal_default_instance();
}
::MetadataEntry* MetadataAction_LookupOutput::mutable_entry() {
  set_has_entry();
  if (entry_ == NULL) {
    entry_ = new ::MetadataEntry;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.LookupOutput.entry)
  return entry_;
}
::MetadataEntry* MetadataAction_LookupOutput::release_entry() {
  // @@protoc_insertion_point(field_release:MetadataAction.LookupOutput.entry)
  clear_has_entry();
  ::MetadataEntry* temp = entry_;
  entry_ = NULL;
  return temp;
}
void MetadataAction_LookupOutput::set_allocated_entry(::MetadataEntry* entry) {
  delete entry_;
  entry_ = entry;
  if (entry) {
    set_has_entry();
  } else {
    clear_has_entry();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.LookupOutput.entry)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_ResizeInput::kPathFieldNumber;
const int MetadataAction_ResizeInput::kPermissionsFieldNumber;
const int MetadataAction_ResizeInput::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_ResizeInput::MetadataAction_ResizeInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.ResizeInput)
}
MetadataAction_ResizeInput::MetadataAction_ResizeInput(const MetadataAction_ResizeInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = NULL;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.ResizeInput)
}

void MetadataAction_ResizeInput::SharedCtor() {
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&permissions_, 0, reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&permissions_) + sizeof(size_));
}

MetadataAction_ResizeInput::~MetadataAction_ResizeInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.ResizeInput)
  SharedDtor();
}

void MetadataAction_ResizeInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete permissions_;
  }
}

void MetadataAction_ResizeInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_ResizeInput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_ResizeInput& MetadataAction_ResizeInput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_ResizeInput* MetadataAction_ResizeInput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_ResizeInput* n = new MetadataAction_ResizeInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_ResizeInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.ResizeInput)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_path()) {
      GOOGLE_DCHECK(!path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*path_.UnsafeRawStringPointer())->clear();
    }
    if (has_permissions()) {
      GOOGLE_DCHECK(permissions_ != NULL);
      permissions_->::Permissions::Clear();
    }
  }
  size_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_ResizeInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.ResizeInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.ResizeInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.ResizeInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.ResizeInput)
  return false;
#undef DO_
}

void MetadataAction_ResizeInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.ResizeInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.ResizeInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->permissions_, output);
  }

  // required uint64 size = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.ResizeInput)
}

::google::protobuf::uint8* MetadataAction_ResizeInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.ResizeInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.ResizeInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->permissions_, deterministic, target);
  }

  // required uint64 size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.ResizeInput)
  return target;
}

size_t MetadataAction_ResizeInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MetadataAction.ResizeInput)
  size_t total_size = 0;

  if (has_path()) {
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_size()) {
    // required uint64 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  return total_size;
}
size_t MetadataAction_ResizeInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.ResizeInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required uint64 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .Permissions permissions = 2;
  if (has_permissions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_ResizeInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.ResizeInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_ResizeInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_ResizeInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.ResizeInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.ResizeInput)
    MergeFrom(*source);
  }
}

void MetadataAction_ResizeInput::MergeFrom(const MetadataAction_ResizeInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.ResizeInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
    if (cached_has_bits & 0x00000004u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MetadataAction_ResizeInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.ResizeInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_ResizeInput::CopyFrom(const MetadataAction_ResizeInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.ResizeInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_ResizeInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void MetadataAction_ResizeInput::Swap(MetadataAction_ResizeInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_ResizeInput::InternalSwap(MetadataAction_ResizeInput* other) {
  path_.Swap(&other->path_);
  std::swap(permissions_, other->permissions_);
  std::swap(size_, other->size_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_ResizeInput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_ResizeInput

// required string path = 1;
bool MetadataAction_ResizeInput::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_ResizeInput::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_ResizeInput::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_ResizeInput::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
const ::std::string& MetadataAction_ResizeInput::path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ResizeInput.path)
  return path_.GetNoArena();
}
void MetadataAction_ResizeInput::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.ResizeInput.path)
}
#if LANG_CXX11
void MetadataAction_ResizeInput::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MetadataAction.ResizeInput.path)
}
#endif
void MetadataAction_ResizeInput::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.ResizeInput.path)
}
void MetadataAction_ResizeInput::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.ResizeInput.path)
}
::std::string* MetadataAction_ResizeInput::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.ResizeInput.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MetadataAction_ResizeInput::release_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.ResizeInput.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MetadataAction_ResizeInput::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.ResizeInput.path)
}

// optional .Permissions permissions = 2;
bool MetadataAction_ResizeInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MetadataAction_ResizeInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
void MetadataAction_ResizeInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
void MetadataAction_ResizeInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
const ::Permissions& MetadataAction_ResizeInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ResizeInput.permissions)
  return permissions_ != NULL ? *permissions_
                         : *::Permissions::internal_default_instance();
}
::Permissions* MetadataAction_ResizeInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.ResizeInput.permissions)
  return permissions_;
}
::Permissions* MetadataAction_ResizeInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.ResizeInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
void MetadataAction_ResizeInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.ResizeInput.permissions)
}

// required uint64 size = 3;
bool MetadataAction_ResizeInput::has_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MetadataAction_ResizeInput::set_has_size() {
  _has_bits_[0] |= 0x00000004u;
}
void MetadataAction_ResizeInput::clear_has_size() {
  _has_bits_[0] &= ~0x00000004u;
}
void MetadataAction_ResizeInput::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
  clear_has_size();
}
::google::protobuf::uint64 MetadataAction_ResizeInput::size() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ResizeInput.size)
  return size_;
}
void MetadataAction_ResizeInput::set_size(::google::protobuf::uint64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.ResizeInput.size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_ResizeOutput::kSuccessFieldNumber;
const int MetadataAction_ResizeOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_ResizeOutput::MetadataAction_ResizeOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.ResizeOutput)
}
MetadataAction_ResizeOutput::MetadataAction_ResizeOutput(const MetadataAction_ResizeOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.ResizeOutput)
}

void MetadataAction_ResizeOutput::SharedCtor() {
  _cached_size_ = 0;
  success_ = true;
}

MetadataAction_ResizeOutput::~MetadataAction_ResizeOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.ResizeOutput)
  SharedDtor();
}

void MetadataAction_ResizeOutput::SharedDtor() {
}

void MetadataAction_ResizeOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_ResizeOutput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_ResizeOutput& MetadataAction_ResizeOutput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_ResizeOutput* MetadataAction_ResizeOutput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_ResizeOutput* n = new MetadataAction_ResizeOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_ResizeOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.ResizeOutput)
  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_ResizeOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.ResizeOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.ResizeOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.ResizeOutput)
  return false;
#undef DO_
}

void MetadataAction_ResizeOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.ResizeOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.ResizeOutput)
}

::google::protobuf::uint8* MetadataAction_ResizeOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.ResizeOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.ResizeOutput)
  return target;
}

size_t MetadataAction_ResizeOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.ResizeOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->errors_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(i));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  if (has_success()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_ResizeOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.ResizeOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_ResizeOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_ResizeOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.ResizeOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.ResizeOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_ResizeOutput::MergeFrom(const MetadataAction_ResizeOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.ResizeOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_ResizeOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.ResizeOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_ResizeOutput::CopyFrom(const MetadataAction_ResizeOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.ResizeOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_ResizeOutput::IsInitialized() const {
  return true;
}

void MetadataAction_ResizeOutput::Swap(MetadataAction_ResizeOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_ResizeOutput::InternalSwap(MetadataAction_ResizeOutput* other) {
  errors_.InternalSwap(&other->errors_);
  std::swap(success_, other->success_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_ResizeOutput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_ResizeOutput

// optional bool success = 1 [default = true];
bool MetadataAction_ResizeOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_ResizeOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_ResizeOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_ResizeOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
bool MetadataAction_ResizeOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ResizeOutput.success)
  return success_;
}
void MetadataAction_ResizeOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.ResizeOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
int MetadataAction_ResizeOutput::errors_size() const {
  return errors_.size();
}
void MetadataAction_ResizeOutput::clear_errors() {
  errors_.Clear();
}
::MetadataAction_Error MetadataAction_ResizeOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.ResizeOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
void MetadataAction_ResizeOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.ResizeOutput.errors)
}
void MetadataAction_ResizeOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.ResizeOutput.errors)
}
const ::google::protobuf::RepeatedField<int>&
MetadataAction_ResizeOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.ResizeOutput.errors)
  return errors_;
}
::google::protobuf::RepeatedField<int>*
MetadataAction_ResizeOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.ResizeOutput.errors)
  return &errors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_WriteInput::kPathFieldNumber;
const int MetadataAction_WriteInput::kPermissionsFieldNumber;
const int MetadataAction_WriteInput::kOffsetFieldNumber;
const int MetadataAction_WriteInput::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_WriteInput::MetadataAction_WriteInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.WriteInput)
}
MetadataAction_WriteInput::MetadataAction_WriteInput(const MetadataAction_WriteInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = NULL;
  }
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.WriteInput)
}

void MetadataAction_WriteInput::SharedCtor() {
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&permissions_, 0, reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&permissions_) + sizeof(offset_));
}

MetadataAction_WriteInput::~MetadataAction_WriteInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.WriteInput)
  SharedDtor();
}

void MetadataAction_WriteInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete permissions_;
  }
}

void MetadataAction_WriteInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_WriteInput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_WriteInput& MetadataAction_WriteInput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_WriteInput* MetadataAction_WriteInput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_WriteInput* n = new MetadataAction_WriteInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_WriteInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.WriteInput)
  data_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_path()) {
      GOOGLE_DCHECK(!path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*path_.UnsafeRawStringPointer())->clear();
    }
    if (has_permissions()) {
      GOOGLE_DCHECK(permissions_ != NULL);
      permissions_->::Permissions::Clear();
    }
  }
  offset_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_WriteInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.WriteInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.WriteInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .FilePart data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.WriteInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.WriteInput)
  return false;
#undef DO_
}

void MetadataAction_WriteInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.WriteInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.WriteInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->permissions_, output);
  }

  // required uint64 offset = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  // repeated .FilePart data = 4;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.WriteInput)
}

::google::protobuf::uint8* MetadataAction_WriteInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.WriteInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.WriteInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->permissions_, deterministic, target);
  }

  // required uint64 offset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  // repeated .FilePart data = 4;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->data(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.WriteInput)
  return target;
}

size_t MetadataAction_WriteInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MetadataAction.WriteInput)
  size_t total_size = 0;

  if (has_path()) {
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_offset()) {
    // required uint64 offset = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  return total_size;
}
size_t MetadataAction_WriteInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.WriteInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required uint64 offset = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .FilePart data = 4;
  {
    unsigned int count = this->data_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data(i));
    }
  }

  // optional .Permissions permissions = 2;
  if (has_permissions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_WriteInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.WriteInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_WriteInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_WriteInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.WriteInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.WriteInput)
    MergeFrom(*source);
  }
}

void MetadataAction_WriteInput::MergeFrom(const MetadataAction_WriteInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.WriteInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
    if (cached_has_bits & 0x00000004u) {
      offset_ = from.offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MetadataAction_WriteInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.WriteInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_WriteInput::CopyFrom(const MetadataAction_WriteInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.WriteInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_WriteInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void MetadataAction_WriteInput::Swap(MetadataAction_WriteInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_WriteInput::InternalSwap(MetadataAction_WriteInput* other) {
  data_.InternalSwap(&other->data_);
  path_.Swap(&other->path_);
  std::swap(permissions_, other->permissions_);
  std::swap(offset_, other->offset_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_WriteInput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_WriteInput

// required string path = 1;
bool MetadataAction_WriteInput::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_WriteInput::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_WriteInput::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_WriteInput::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
const ::std::string& MetadataAction_WriteInput::path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.WriteInput.path)
  return path_.GetNoArena();
}
void MetadataAction_WriteInput::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.WriteInput.path)
}
#if LANG_CXX11
void MetadataAction_WriteInput::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MetadataAction.WriteInput.path)
}
#endif
void MetadataAction_WriteInput::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.WriteInput.path)
}
void MetadataAction_WriteInput::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.WriteInput.path)
}
::std::string* MetadataAction_WriteInput::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.WriteInput.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MetadataAction_WriteInput::release_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.WriteInput.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MetadataAction_WriteInput::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.WriteInput.path)
}

// optional .Permissions permissions = 2;
bool MetadataAction_WriteInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MetadataAction_WriteInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
void MetadataAction_WriteInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
void MetadataAction_WriteInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
const ::Permissions& MetadataAction_WriteInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.WriteInput.permissions)
  return permissions_ != NULL ? *permissions_
                         : *::Permissions::internal_default_instance();
}
::Permissions* MetadataAction_WriteInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.WriteInput.permissions)
  return permissions_;
}
::Permissions* MetadataAction_WriteInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.WriteInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
void MetadataAction_WriteInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.WriteInput.permissions)
}

// required uint64 offset = 3;
bool MetadataAction_WriteInput::has_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MetadataAction_WriteInput::set_has_offset() {
  _has_bits_[0] |= 0x00000004u;
}
void MetadataAction_WriteInput::clear_has_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
void MetadataAction_WriteInput::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
::google::protobuf::uint64 MetadataAction_WriteInput::offset() const {
  // @@protoc_insertion_point(field_get:MetadataAction.WriteInput.offset)
  return offset_;
}
void MetadataAction_WriteInput::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.WriteInput.offset)
}

// repeated .FilePart data = 4;
int MetadataAction_WriteInput::data_size() const {
  return data_.size();
}
void MetadataAction_WriteInput::clear_data() {
  data_.Clear();
}
const ::FilePart& MetadataAction_WriteInput::data(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.WriteInput.data)
  return data_.Get(index);
}
::FilePart* MetadataAction_WriteInput::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MetadataAction.WriteInput.data)
  return data_.Mutable(index);
}
::FilePart* MetadataAction_WriteInput::add_data() {
  // @@protoc_insertion_point(field_add:MetadataAction.WriteInput.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::FilePart >*
MetadataAction_WriteInput::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.WriteInput.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::FilePart >&
MetadataAction_WriteInput::data() const {
  // @@protoc_insertion_point(field_list:MetadataAction.WriteInput.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_WriteOutput::kSuccessFieldNumber;
const int MetadataAction_WriteOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_WriteOutput::MetadataAction_WriteOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.WriteOutput)
}
MetadataAction_WriteOutput::MetadataAction_WriteOutput(const MetadataAction_WriteOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.WriteOutput)
}

void MetadataAction_WriteOutput::SharedCtor() {
  _cached_size_ = 0;
  success_ = true;
}

MetadataAction_WriteOutput::~MetadataAction_WriteOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.WriteOutput)
  SharedDtor();
}

void MetadataAction_WriteOutput::SharedDtor() {
}

void MetadataAction_WriteOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_WriteOutput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_WriteOutput& MetadataAction_WriteOutput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_WriteOutput* MetadataAction_WriteOutput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_WriteOutput* n = new MetadataAction_WriteOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_WriteOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.WriteOutput)
  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_WriteOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.WriteOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.WriteOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.WriteOutput)
  return false;
#undef DO_
}

void MetadataAction_WriteOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.WriteOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.WriteOutput)
}

::google::protobuf::uint8* MetadataAction_WriteOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.WriteOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.WriteOutput)
  return target;
}

size_t MetadataAction_WriteOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.WriteOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->errors_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(i));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  if (has_success()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_WriteOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.WriteOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_WriteOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_WriteOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.WriteOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.WriteOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_WriteOutput::MergeFrom(const MetadataAction_WriteOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.WriteOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_WriteOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.WriteOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_WriteOutput::CopyFrom(const MetadataAction_WriteOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.WriteOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_WriteOutput::IsInitialized() const {
  return true;
}

void MetadataAction_WriteOutput::Swap(MetadataAction_WriteOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_WriteOutput::InternalSwap(MetadataAction_WriteOutput* other) {
  errors_.InternalSwap(&other->errors_);
  std::swap(success_, other->success_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_WriteOutput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_WriteOutput

// optional bool success = 1 [default = true];
bool MetadataAction_WriteOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_WriteOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_WriteOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_WriteOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
bool MetadataAction_WriteOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.WriteOutput.success)
  return success_;
}
void MetadataAction_WriteOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.WriteOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
int MetadataAction_WriteOutput::errors_size() const {
  return errors_.size();
}
void MetadataAction_WriteOutput::clear_errors() {
  errors_.Clear();
}
::MetadataAction_Error MetadataAction_WriteOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.WriteOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
void MetadataAction_WriteOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.WriteOutput.errors)
}
void MetadataAction_WriteOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.WriteOutput.errors)
}
const ::google::protobuf::RepeatedField<int>&
MetadataAction_WriteOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.WriteOutput.errors)
  return errors_;
}
::google::protobuf::RepeatedField<int>*
MetadataAction_WriteOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.WriteOutput.errors)
  return &errors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_AppendInput::kPathFieldNumber;
const int MetadataAction_AppendInput::kPermissionsFieldNumber;
const int MetadataAction_AppendInput::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_AppendInput::MetadataAction_AppendInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.AppendInput)
}
MetadataAction_AppendInput::MetadataAction_AppendInput(const MetadataAction_AppendInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MetadataAction.AppendInput)
}

void MetadataAction_AppendInput::SharedCtor() {
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissions_ = NULL;
}

MetadataAction_AppendInput::~MetadataAction_AppendInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.AppendInput)
  SharedDtor();
}

void MetadataAction_AppendInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete permissions_;
  }
}

void MetadataAction_AppendInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_AppendInput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_AppendInput& MetadataAction_AppendInput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_AppendInput* MetadataAction_AppendInput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_AppendInput* n = new MetadataAction_AppendInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_AppendInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.AppendInput)
  data_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_path()) {
      GOOGLE_DCHECK(!path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*path_.UnsafeRawStringPointer())->clear();
    }
    if (has_permissions()) {
      GOOGLE_DCHECK(permissions_ != NULL);
      permissions_->::Permissions::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_AppendInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.AppendInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.AppendInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .FilePart data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.AppendInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.AppendInput)
  return false;
#undef DO_
}

void MetadataAction_AppendInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.AppendInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.AppendInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->permissions_, output);
  }

  // repeated .FilePart data = 3;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.AppendInput)
}

::google::protobuf::uint8* MetadataAction_AppendInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.AppendInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.AppendInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->permissions_, deterministic, target);
  }

  // repeated .FilePart data = 3;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->data(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.AppendInput)
  return target;
}

size_t MetadataAction_AppendInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.AppendInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required string path = 1;
  if (has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }
  // repeated .FilePart data = 3;
  {
    unsigned int count = this->data_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data(i));
    }
  }

  // optional .Permissions permissions = 2;
  if (has_permissions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_AppendInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.AppendInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_AppendInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_AppendInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.AppendInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.AppendInput)
    MergeFrom(*source);
  }
}

void MetadataAction_AppendInput::MergeFrom(const MetadataAction_AppendInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.AppendInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
  }
}

void MetadataAction_AppendInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.AppendInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_AppendInput::CopyFrom(const MetadataAction_AppendInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.AppendInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_AppendInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void MetadataAction_AppendInput::Swap(MetadataAction_AppendInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_AppendInput::InternalSwap(MetadataAction_AppendInput* other) {
  data_.InternalSwap(&other->data_);
  path_.Swap(&other->path_);
  std::swap(permissions_, other->permissions_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_AppendInput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_AppendInput

// required string path = 1;
bool MetadataAction_AppendInput::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_AppendInput::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_AppendInput::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_AppendInput::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
const ::std::string& MetadataAction_AppendInput::path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.AppendInput.path)
  return path_.GetNoArena();
}
void MetadataAction_AppendInput::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.AppendInput.path)
}
#if LANG_CXX11
void MetadataAction_AppendInput::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MetadataAction.AppendInput.path)
}
#endif
void MetadataAction_AppendInput::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.AppendInput.path)
}
void MetadataAction_AppendInput::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.AppendInput.path)
}
::std::string* MetadataAction_AppendInput::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.AppendInput.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MetadataAction_AppendInput::release_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.AppendInput.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MetadataAction_AppendInput::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.AppendInput.path)
}

// optional .Permissions permissions = 2;
bool MetadataAction_AppendInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MetadataAction_AppendInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
void MetadataAction_AppendInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
void MetadataAction_AppendInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
const ::Permissions& MetadataAction_AppendInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.AppendInput.permissions)
  return permissions_ != NULL ? *permissions_
                         : *::Permissions::internal_default_instance();
}
::Permissions* MetadataAction_AppendInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.AppendInput.permissions)
  return permissions_;
}
::Permissions* MetadataAction_AppendInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.AppendInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
void MetadataAction_AppendInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.AppendInput.permissions)
}

// repeated .FilePart data = 3;
int MetadataAction_AppendInput::data_size() const {
  return data_.size();
}
void MetadataAction_AppendInput::clear_data() {
  data_.Clear();
}
const ::FilePart& MetadataAction_AppendInput::data(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.AppendInput.data)
  return data_.Get(index);
}
::FilePart* MetadataAction_AppendInput::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MetadataAction.AppendInput.data)
  return data_.Mutable(index);
}
::FilePart* MetadataAction_AppendInput::add_data() {
  // @@protoc_insertion_point(field_add:MetadataAction.AppendInput.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::FilePart >*
MetadataAction_AppendInput::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.AppendInput.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::FilePart >&
MetadataAction_AppendInput::data() const {
  // @@protoc_insertion_point(field_list:MetadataAction.AppendInput.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_AppendOutput::kSuccessFieldNumber;
const int MetadataAction_AppendOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_AppendOutput::MetadataAction_AppendOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.AppendOutput)
}
MetadataAction_AppendOutput::MetadataAction_AppendOutput(const MetadataAction_AppendOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.AppendOutput)
}

void MetadataAction_AppendOutput::SharedCtor() {
  _cached_size_ = 0;
  success_ = true;
}

MetadataAction_AppendOutput::~MetadataAction_AppendOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.AppendOutput)
  SharedDtor();
}

void MetadataAction_AppendOutput::SharedDtor() {
}

void MetadataAction_AppendOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_AppendOutput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_AppendOutput& MetadataAction_AppendOutput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_AppendOutput* MetadataAction_AppendOutput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_AppendOutput* n = new MetadataAction_AppendOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_AppendOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.AppendOutput)
  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_AppendOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.AppendOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.AppendOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.AppendOutput)
  return false;
#undef DO_
}

void MetadataAction_AppendOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.AppendOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.AppendOutput)
}

::google::protobuf::uint8* MetadataAction_AppendOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.AppendOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.AppendOutput)
  return target;
}

size_t MetadataAction_AppendOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.AppendOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->errors_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(i));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  if (has_success()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_AppendOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.AppendOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_AppendOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_AppendOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.AppendOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.AppendOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_AppendOutput::MergeFrom(const MetadataAction_AppendOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.AppendOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_AppendOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.AppendOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_AppendOutput::CopyFrom(const MetadataAction_AppendOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.AppendOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_AppendOutput::IsInitialized() const {
  return true;
}

void MetadataAction_AppendOutput::Swap(MetadataAction_AppendOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_AppendOutput::InternalSwap(MetadataAction_AppendOutput* other) {
  errors_.InternalSwap(&other->errors_);
  std::swap(success_, other->success_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_AppendOutput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_AppendOutput

// optional bool success = 1 [default = true];
bool MetadataAction_AppendOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_AppendOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_AppendOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_AppendOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
bool MetadataAction_AppendOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.AppendOutput.success)
  return success_;
}
void MetadataAction_AppendOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.AppendOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
int MetadataAction_AppendOutput::errors_size() const {
  return errors_.size();
}
void MetadataAction_AppendOutput::clear_errors() {
  errors_.Clear();
}
::MetadataAction_Error MetadataAction_AppendOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.AppendOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
void MetadataAction_AppendOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.AppendOutput.errors)
}
void MetadataAction_AppendOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.AppendOutput.errors)
}
const ::google::protobuf::RepeatedField<int>&
MetadataAction_AppendOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.AppendOutput.errors)
  return errors_;
}
::google::protobuf::RepeatedField<int>*
MetadataAction_AppendOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.AppendOutput.errors)
  return &errors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_ChangePermissionsInput::kPathFieldNumber;
const int MetadataAction_ChangePermissionsInput::kPermissionsFieldNumber;
const int MetadataAction_ChangePermissionsInput::kNewPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_ChangePermissionsInput::MetadataAction_ChangePermissionsInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.ChangePermissionsInput)
}
MetadataAction_ChangePermissionsInput::MetadataAction_ChangePermissionsInput(const MetadataAction_ChangePermissionsInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = NULL;
  }
  if (from.has_new_permissions()) {
    new_permissions_ = new ::Permissions(*from.new_permissions_);
  } else {
    new_permissions_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MetadataAction.ChangePermissionsInput)
}

void MetadataAction_ChangePermissionsInput::SharedCtor() {
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&permissions_, 0, reinterpret_cast<char*>(&new_permissions_) -
    reinterpret_cast<char*>(&permissions_) + sizeof(new_permissions_));
}

MetadataAction_ChangePermissionsInput::~MetadataAction_ChangePermissionsInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.ChangePermissionsInput)
  SharedDtor();
}

void MetadataAction_ChangePermissionsInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete permissions_;
  }
  if (this != internal_default_instance()) {
    delete new_permissions_;
  }
}

void MetadataAction_ChangePermissionsInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_ChangePermissionsInput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_ChangePermissionsInput& MetadataAction_ChangePermissionsInput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_ChangePermissionsInput* MetadataAction_ChangePermissionsInput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_ChangePermissionsInput* n = new MetadataAction_ChangePermissionsInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_ChangePermissionsInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.ChangePermissionsInput)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_path()) {
      GOOGLE_DCHECK(!path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*path_.UnsafeRawStringPointer())->clear();
    }
    if (has_permissions()) {
      GOOGLE_DCHECK(permissions_ != NULL);
      permissions_->::Permissions::Clear();
    }
    if (has_new_permissions()) {
      GOOGLE_DCHECK(new_permissions_ != NULL);
      new_permissions_->::Permissions::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_ChangePermissionsInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.ChangePermissionsInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.ChangePermissionsInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Permissions new_permissions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_new_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.ChangePermissionsInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.ChangePermissionsInput)
  return false;
#undef DO_
}

void MetadataAction_ChangePermissionsInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.ChangePermissionsInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.ChangePermissionsInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->permissions_, output);
  }

  // required .Permissions new_permissions = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->new_permissions_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.ChangePermissionsInput)
}

::google::protobuf::uint8* MetadataAction_ChangePermissionsInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.ChangePermissionsInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.ChangePermissionsInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->permissions_, deterministic, target);
  }

  // required .Permissions new_permissions = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->new_permissions_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.ChangePermissionsInput)
  return target;
}

size_t MetadataAction_ChangePermissionsInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MetadataAction.ChangePermissionsInput)
  size_t total_size = 0;

  if (has_path()) {
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_new_permissions()) {
    // required .Permissions new_permissions = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->new_permissions_);
  }

  return total_size;
}
size_t MetadataAction_ChangePermissionsInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.ChangePermissionsInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required .Permissions new_permissions = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->new_permissions_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .Permissions permissions = 2;
  if (has_permissions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_ChangePermissionsInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.ChangePermissionsInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_ChangePermissionsInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_ChangePermissionsInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.ChangePermissionsInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.ChangePermissionsInput)
    MergeFrom(*source);
  }
}

void MetadataAction_ChangePermissionsInput::MergeFrom(const MetadataAction_ChangePermissionsInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.ChangePermissionsInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_new_permissions()->::Permissions::MergeFrom(from.new_permissions());
    }
  }
}

void MetadataAction_ChangePermissionsInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.ChangePermissionsInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_ChangePermissionsInput::CopyFrom(const MetadataAction_ChangePermissionsInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.ChangePermissionsInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_ChangePermissionsInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void MetadataAction_ChangePermissionsInput::Swap(MetadataAction_ChangePermissionsInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_ChangePermissionsInput::InternalSwap(MetadataAction_ChangePermissionsInput* other) {
  path_.Swap(&other->path_);
  std::swap(permissions_, other->permissions_);
  std::swap(new_permissions_, other->new_permissions_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_ChangePermissionsInput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_ChangePermissionsInput

// required string path = 1;
bool MetadataAction_ChangePermissionsInput::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_ChangePermissionsInput::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_ChangePermissionsInput::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_ChangePermissionsInput::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
const ::std::string& MetadataAction_ChangePermissionsInput::path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ChangePermissionsInput.path)
  return path_.GetNoArena();
}
void MetadataAction_ChangePermissionsInput::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.ChangePermissionsInput.path)
}
#if LANG_CXX11
void MetadataAction_ChangePermissionsInput::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MetadataAction.ChangePermissionsInput.path)
}
#endif
void MetadataAction_ChangePermissionsInput::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.ChangePermissionsInput.path)
}
void MetadataAction_ChangePermissionsInput::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.ChangePermissionsInput.path)
}
::std::string* MetadataAction_ChangePermissionsInput::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.ChangePermissionsInput.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MetadataAction_ChangePermissionsInput::release_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.ChangePermissionsInput.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MetadataAction_ChangePermissionsInput::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.ChangePermissionsInput.path)
}

// optional .Permissions permissions = 2;
bool MetadataAction_ChangePermissionsInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MetadataAction_ChangePermissionsInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
void MetadataAction_ChangePermissionsInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
void MetadataAction_ChangePermissionsInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
const ::Permissions& MetadataAction_ChangePermissionsInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ChangePermissionsInput.permissions)
  return permissions_ != NULL ? *permissions_
                         : *::Permissions::internal_default_instance();
}
::Permissions* MetadataAction_ChangePermissionsInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.ChangePermissionsInput.permissions)
  return permissions_;
}
::Permissions* MetadataAction_ChangePermissionsInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.ChangePermissionsInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
void MetadataAction_ChangePermissionsInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.ChangePermissionsInput.permissions)
}

// required .Permissions new_permissions = 3;
bool MetadataAction_ChangePermissionsInput::has_new_permissions() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MetadataAction_ChangePermissionsInput::set_has_new_permissions() {
  _has_bits_[0] |= 0x00000004u;
}
void MetadataAction_ChangePermissionsInput::clear_has_new_permissions() {
  _has_bits_[0] &= ~0x00000004u;
}
void MetadataAction_ChangePermissionsInput::clear_new_permissions() {
  if (new_permissions_ != NULL) new_permissions_->::Permissions::Clear();
  clear_has_new_permissions();
}
const ::Permissions& MetadataAction_ChangePermissionsInput::new_permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ChangePermissionsInput.new_permissions)
  return new_permissions_ != NULL ? *new_permissions_
                         : *::Permissions::internal_default_instance();
}
::Permissions* MetadataAction_ChangePermissionsInput::mutable_new_permissions() {
  set_has_new_permissions();
  if (new_permissions_ == NULL) {
    new_permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.ChangePermissionsInput.new_permissions)
  return new_permissions_;
}
::Permissions* MetadataAction_ChangePermissionsInput::release_new_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.ChangePermissionsInput.new_permissions)
  clear_has_new_permissions();
  ::Permissions* temp = new_permissions_;
  new_permissions_ = NULL;
  return temp;
}
void MetadataAction_ChangePermissionsInput::set_allocated_new_permissions(::Permissions* new_permissions) {
  delete new_permissions_;
  new_permissions_ = new_permissions;
  if (new_permissions) {
    set_has_new_permissions();
  } else {
    clear_has_new_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.ChangePermissionsInput.new_permissions)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_ChangePermissionsOutput::kSuccessFieldNumber;
const int MetadataAction_ChangePermissionsOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_ChangePermissionsOutput::MetadataAction_ChangePermissionsOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.ChangePermissionsOutput)
}
MetadataAction_ChangePermissionsOutput::MetadataAction_ChangePermissionsOutput(const MetadataAction_ChangePermissionsOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.ChangePermissionsOutput)
}

void MetadataAction_ChangePermissionsOutput::SharedCtor() {
  _cached_size_ = 0;
  success_ = true;
}

MetadataAction_ChangePermissionsOutput::~MetadataAction_ChangePermissionsOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.ChangePermissionsOutput)
  SharedDtor();
}

void MetadataAction_ChangePermissionsOutput::SharedDtor() {
}

void MetadataAction_ChangePermissionsOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction_ChangePermissionsOutput::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction_ChangePermissionsOutput& MetadataAction_ChangePermissionsOutput::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction_ChangePermissionsOutput* MetadataAction_ChangePermissionsOutput::New(::google::protobuf::Arena* arena) const {
  MetadataAction_ChangePermissionsOutput* n = new MetadataAction_ChangePermissionsOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction_ChangePermissionsOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.ChangePermissionsOutput)
  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction_ChangePermissionsOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.ChangePermissionsOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.ChangePermissionsOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.ChangePermissionsOutput)
  return false;
#undef DO_
}

void MetadataAction_ChangePermissionsOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.ChangePermissionsOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.ChangePermissionsOutput)
}

::google::protobuf::uint8* MetadataAction_ChangePermissionsOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.ChangePermissionsOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.ChangePermissionsOutput)
  return target;
}

size_t MetadataAction_ChangePermissionsOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.ChangePermissionsOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->errors_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(i));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  if (has_success()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction_ChangePermissionsOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.ChangePermissionsOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_ChangePermissionsOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction_ChangePermissionsOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.ChangePermissionsOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.ChangePermissionsOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_ChangePermissionsOutput::MergeFrom(const MetadataAction_ChangePermissionsOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.ChangePermissionsOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_ChangePermissionsOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.ChangePermissionsOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_ChangePermissionsOutput::CopyFrom(const MetadataAction_ChangePermissionsOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.ChangePermissionsOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_ChangePermissionsOutput::IsInitialized() const {
  return true;
}

void MetadataAction_ChangePermissionsOutput::Swap(MetadataAction_ChangePermissionsOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_ChangePermissionsOutput::InternalSwap(MetadataAction_ChangePermissionsOutput* other) {
  errors_.InternalSwap(&other->errors_);
  std::swap(success_, other->success_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction_ChangePermissionsOutput::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction_ChangePermissionsOutput

// optional bool success = 1 [default = true];
bool MetadataAction_ChangePermissionsOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetadataAction_ChangePermissionsOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
void MetadataAction_ChangePermissionsOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetadataAction_ChangePermissionsOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
bool MetadataAction_ChangePermissionsOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ChangePermissionsOutput.success)
  return success_;
}
void MetadataAction_ChangePermissionsOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.ChangePermissionsOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
int MetadataAction_ChangePermissionsOutput::errors_size() const {
  return errors_.size();
}
void MetadataAction_ChangePermissionsOutput::clear_errors() {
  errors_.Clear();
}
::MetadataAction_Error MetadataAction_ChangePermissionsOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.ChangePermissionsOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
void MetadataAction_ChangePermissionsOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.ChangePermissionsOutput.errors)
}
void MetadataAction_ChangePermissionsOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.ChangePermissionsOutput.errors)
}
const ::google::protobuf::RepeatedField<int>&
MetadataAction_ChangePermissionsOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.ChangePermissionsOutput.errors)
  return errors_;
}
::google::protobuf::RepeatedField<int>*
MetadataAction_ChangePermissionsOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.ChangePermissionsOutput.errors)
  return &errors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction::MetadataAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_metadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction)
}
MetadataAction::MetadataAction(const MetadataAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MetadataAction)
}

void MetadataAction::SharedCtor() {
  _cached_size_ = 0;
}

MetadataAction::~MetadataAction() {
  // @@protoc_insertion_point(destructor:MetadataAction)
  SharedDtor();
}

void MetadataAction::SharedDtor() {
}

void MetadataAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadataAction::descriptor() {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadataAction& MetadataAction::default_instance() {
  protobuf_metadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MetadataAction* MetadataAction::New(::google::protobuf::Arena* arena) const {
  MetadataAction* n = new MetadataAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadataAction::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetadataAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction)
  return false;
#undef DO_
}

void MetadataAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction)
}

::google::protobuf::uint8* MetadataAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction)
  return target;
}

size_t MetadataAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadataAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadataAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction)
    MergeFrom(*source);
  }
}

void MetadataAction::MergeFrom(const MetadataAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MetadataAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction::CopyFrom(const MetadataAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction::IsInitialized() const {
  return true;
}

void MetadataAction::Swap(MetadataAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction::InternalSwap(MetadataAction* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadataAction::GetMetadata() const {
  protobuf_metadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metadata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetadataAction

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
