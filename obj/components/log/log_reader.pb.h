// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log_reader.proto

#ifndef PROTOBUF_log_5freader_2eproto__INCLUDED
#define PROTOBUF_log_5freader_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class LogReaderState;
class LogReaderStateDefaultTypeInternal;
extern LogReaderStateDefaultTypeInternal _LogReaderState_default_instance_;

namespace protobuf_log_5freader_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_log_5freader_2eproto

// ===================================================================

class LogReaderState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LogReaderState) */ {
 public:
  LogReaderState();
  virtual ~LogReaderState();

  LogReaderState(const LogReaderState& from);

  inline LogReaderState& operator=(const LogReaderState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogReaderState& default_instance();

  static inline const LogReaderState* internal_default_instance() {
    return reinterpret_cast<const LogReaderState*>(
               &_LogReaderState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LogReaderState* other);

  // implements Message ----------------------------------------------

  inline LogReaderState* New() const PROTOBUF_FINAL { return New(NULL); }

  LogReaderState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LogReaderState& from);
  void MergeFrom(const LogReaderState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LogReaderState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes entry = 3;
  bool has_entry() const;
  void clear_entry();
  static const int kEntryFieldNumber = 3;
  const ::std::string& entry() const;
  void set_entry(const ::std::string& value);
  #if LANG_CXX11
  void set_entry(::std::string&& value);
  #endif
  void set_entry(const char* value);
  void set_entry(const void* value, size_t size);
  ::std::string* mutable_entry();
  ::std::string* release_entry();
  void set_allocated_entry(::std::string* entry);

  // optional uint64 version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::uint64 version() const;
  void set_version(::google::protobuf::uint64 value);

  // optional bool started = 1 [default = false];
  bool has_started() const;
  void clear_started();
  static const int kStartedFieldNumber = 1;
  bool started() const;
  void set_started(bool value);

  // optional bool success = 4 [default = false];
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 4;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:LogReaderState)
 private:
  void set_has_started();
  void clear_has_started();
  void set_has_version();
  void clear_has_version();
  void set_has_entry();
  void clear_has_entry();
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entry_;
  ::google::protobuf::uint64 version_;
  bool started_;
  bool success_;
  friend struct protobuf_log_5freader_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LogReaderState

// optional bool started = 1 [default = false];
inline bool LogReaderState::has_started() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogReaderState::set_has_started() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogReaderState::clear_has_started() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogReaderState::clear_started() {
  started_ = false;
  clear_has_started();
}
inline bool LogReaderState::started() const {
  // @@protoc_insertion_point(field_get:LogReaderState.started)
  return started_;
}
inline void LogReaderState::set_started(bool value) {
  set_has_started();
  started_ = value;
  // @@protoc_insertion_point(field_set:LogReaderState.started)
}

// optional uint64 version = 2;
inline bool LogReaderState::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogReaderState::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogReaderState::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogReaderState::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 LogReaderState::version() const {
  // @@protoc_insertion_point(field_get:LogReaderState.version)
  return version_;
}
inline void LogReaderState::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:LogReaderState.version)
}

// optional bytes entry = 3;
inline bool LogReaderState::has_entry() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogReaderState::set_has_entry() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogReaderState::clear_has_entry() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogReaderState::clear_entry() {
  entry_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entry();
}
inline const ::std::string& LogReaderState::entry() const {
  // @@protoc_insertion_point(field_get:LogReaderState.entry)
  return entry_.GetNoArena();
}
inline void LogReaderState::set_entry(const ::std::string& value) {
  set_has_entry();
  entry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LogReaderState.entry)
}
#if LANG_CXX11
inline void LogReaderState::set_entry(::std::string&& value) {
  set_has_entry();
  entry_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LogReaderState.entry)
}
#endif
inline void LogReaderState::set_entry(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_entry();
  entry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LogReaderState.entry)
}
inline void LogReaderState::set_entry(const void* value, size_t size) {
  set_has_entry();
  entry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LogReaderState.entry)
}
inline ::std::string* LogReaderState::mutable_entry() {
  set_has_entry();
  // @@protoc_insertion_point(field_mutable:LogReaderState.entry)
  return entry_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogReaderState::release_entry() {
  // @@protoc_insertion_point(field_release:LogReaderState.entry)
  clear_has_entry();
  return entry_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogReaderState::set_allocated_entry(::std::string* entry) {
  if (entry != NULL) {
    set_has_entry();
  } else {
    clear_has_entry();
  }
  entry_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entry);
  // @@protoc_insertion_point(field_set_allocated:LogReaderState.entry)
}

// optional bool success = 4 [default = false];
inline bool LogReaderState::has_success() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogReaderState::set_has_success() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogReaderState::clear_has_success() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogReaderState::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool LogReaderState::success() const {
  // @@protoc_insertion_point(field_get:LogReaderState.success)
  return success_;
}
inline void LogReaderState::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:LogReaderState.success)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_log_5freader_2eproto__INCLUDED
